Grammar:

Rule 0     S' -> script
Rule 1     script -> <empty>
Rule 2     script -> code script
Rule 3     code -> expr
Rule 4     code -> var
Rule 5     code -> function
Rule 6     code -> element
Rule 7     element -> TRAIT NAME params  [precedence=left, level=5]
Rule 8     element -> NEUTRAL NAME params  [precedence=left, level=5]
Rule 9     element -> SEA NAME params  [precedence=left, level=5]
Rule 10    element -> PROVINCE NAME params  [precedence=left, level=5]
Rule 11    element -> NATION NAME params  [precedence=left, level=5]
Rule 12    var -> NAME ASSIGN expr
Rule 13    params -> <empty>
Rule 14    params -> param
Rule 15    params -> param , params
Rule 16    params -> ( params )
Rule 17    param -> NAME PARAMASSIGN expr
Rule 18    condition -> expr ELESS expr  [precedence=left, level=4]
Rule 19    condition -> expr EGREATER expr  [precedence=left, level=4]
Rule 20    condition -> expr LESS expr  [precedence=left, level=4]
Rule 21    condition -> expr GREATER expr  [precedence=left, level=4]
Rule 22    condition -> expr NOTEQUALS expr  [precedence=left, level=4]
Rule 23    condition -> expr EQUALS expr  [precedence=left, level=4]
Rule 24    condition -> NOT expr
Rule 25    condition -> expr XOR expr  [precedence=left, level=3]
Rule 26    condition -> expr OR expr  [precedence=left, level=3]
Rule 27    condition -> expr AND expr  [precedence=left, level=3]
Rule 28    expr -> expr ARROW expr
Rule 29    expr -> MINUS expr  [precedence=left, level=1]
Rule 30    expr -> PLUS expr  [precedence=left, level=1]
Rule 31    expr -> XMINUS expr
Rule 32    expr -> XPLUS expr
Rule 33    expr -> expr DIVIDE expr  [precedence=left, level=2]
Rule 34    expr -> expr MULTIPLY expr  [precedence=left, level=2]
Rule 35    expr -> expr MINUS expr  [precedence=left, level=1]
Rule 36    expr -> expr PLUS expr  [precedence=left, level=1]
Rule 37    expr -> ( expr )
Rule 38    expr -> condition
Rule 39    expr -> [ list_expr ]
Rule 40    expr -> BOOL  [precedence=left, level=6]
Rule 41    expr -> STRING
Rule 42    expr -> NUMBER
Rule 43    expr -> NAME  [precedence=left, level=5]
Rule 44    list_expr -> expr
Rule 45    list_expr -> <empty>
Rule 46    list_expr -> expr , list_expr
Rule 47    function -> WHILE ( condition ) { script }
Rule 48    function -> IF ( condition ) { script }
Rule 49    function -> ELSE { script }
Rule 50    function -> DISTRIBUTION NAME params { script }
Rule 51    function -> EVENT NAME params { script }
Rule 52    function -> SHOW ( expr )

Unused terminals:

    FOR

Terminals, with rules where they appear:

(                    : 16 37 47 48 52
)                    : 16 37 47 48 52
,                    : 15 46
AND                  : 27
ARROW                : 28
ASSIGN               : 12
BOOL                 : 40
DISTRIBUTION         : 50
DIVIDE               : 33
EGREATER             : 19
ELESS                : 18
ELSE                 : 49
EQUALS               : 23
EVENT                : 51
FOR                  : 
GREATER              : 21
IF                   : 48
LESS                 : 20
MINUS                : 29 35
MULTIPLY             : 34
NAME                 : 7 8 9 10 11 12 17 43 50 51
NATION               : 11
NEUTRAL              : 8
NOT                  : 24
NOTEQUALS            : 22
NUMBER               : 42
OR                   : 26
PARAMASSIGN          : 17
PLUS                 : 30 36
PROVINCE             : 10
SEA                  : 9
SHOW                 : 52
STRING               : 41
TRAIT                : 7
WHILE                : 47
XMINUS               : 31
XOR                  : 25
XPLUS                : 32
[                    : 39
]                    : 39
error                : 
{                    : 47 48 49 50 51
}                    : 47 48 49 50 51

Nonterminals, with rules where they appear:

code                 : 2
condition            : 38 47 48
element              : 6
expr                 : 3 12 17 18 18 19 19 20 20 21 21 22 22 23 23 24 25 25 26 26 27 27 28 28 29 30 31 32 33 33 34 34 35 35 36 36 37 44 46 52
function             : 5
list_expr            : 39 46
param                : 14 15
params               : 7 8 9 10 11 15 16 50 51
script               : 2 47 48 49 50 51 0
var                  : 4


state 0

    (0) S' -> . script
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    $end            reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    script                         shift and go to state 1
    code                           shift and go to state 2
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6
    condition                      shift and go to state 12

state 1

    (0) S' -> script .


state 2

    (2) script -> code . script
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    $end            reduce using rule 1 (script -> .)
    }               reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    code                           shift and go to state 2
    script                         shift and go to state 30
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6
    condition                      shift and go to state 12

state 3

    (3) code -> expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    XMINUS          reduce using rule 3 (code -> expr .)
    XPLUS           reduce using rule 3 (code -> expr .)
    (               reduce using rule 3 (code -> expr .)
    [               reduce using rule 3 (code -> expr .)
    BOOL            reduce using rule 3 (code -> expr .)
    STRING          reduce using rule 3 (code -> expr .)
    NUMBER          reduce using rule 3 (code -> expr .)
    NAME            reduce using rule 3 (code -> expr .)
    WHILE           reduce using rule 3 (code -> expr .)
    IF              reduce using rule 3 (code -> expr .)
    ELSE            reduce using rule 3 (code -> expr .)
    DISTRIBUTION    reduce using rule 3 (code -> expr .)
    EVENT           reduce using rule 3 (code -> expr .)
    SHOW            reduce using rule 3 (code -> expr .)
    TRAIT           reduce using rule 3 (code -> expr .)
    NEUTRAL         reduce using rule 3 (code -> expr .)
    SEA             reduce using rule 3 (code -> expr .)
    PROVINCE        reduce using rule 3 (code -> expr .)
    NATION          reduce using rule 3 (code -> expr .)
    NOT             reduce using rule 3 (code -> expr .)
    $end            reduce using rule 3 (code -> expr .)
    }               reduce using rule 3 (code -> expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 4

    (4) code -> var .
    MINUS           reduce using rule 4 (code -> var .)
    PLUS            reduce using rule 4 (code -> var .)
    XMINUS          reduce using rule 4 (code -> var .)
    XPLUS           reduce using rule 4 (code -> var .)
    (               reduce using rule 4 (code -> var .)
    [               reduce using rule 4 (code -> var .)
    BOOL            reduce using rule 4 (code -> var .)
    STRING          reduce using rule 4 (code -> var .)
    NUMBER          reduce using rule 4 (code -> var .)
    NAME            reduce using rule 4 (code -> var .)
    WHILE           reduce using rule 4 (code -> var .)
    IF              reduce using rule 4 (code -> var .)
    ELSE            reduce using rule 4 (code -> var .)
    DISTRIBUTION    reduce using rule 4 (code -> var .)
    EVENT           reduce using rule 4 (code -> var .)
    SHOW            reduce using rule 4 (code -> var .)
    TRAIT           reduce using rule 4 (code -> var .)
    NEUTRAL         reduce using rule 4 (code -> var .)
    SEA             reduce using rule 4 (code -> var .)
    PROVINCE        reduce using rule 4 (code -> var .)
    NATION          reduce using rule 4 (code -> var .)
    NOT             reduce using rule 4 (code -> var .)
    $end            reduce using rule 4 (code -> var .)
    }               reduce using rule 4 (code -> var .)


state 5

    (5) code -> function .
    MINUS           reduce using rule 5 (code -> function .)
    PLUS            reduce using rule 5 (code -> function .)
    XMINUS          reduce using rule 5 (code -> function .)
    XPLUS           reduce using rule 5 (code -> function .)
    (               reduce using rule 5 (code -> function .)
    [               reduce using rule 5 (code -> function .)
    BOOL            reduce using rule 5 (code -> function .)
    STRING          reduce using rule 5 (code -> function .)
    NUMBER          reduce using rule 5 (code -> function .)
    NAME            reduce using rule 5 (code -> function .)
    WHILE           reduce using rule 5 (code -> function .)
    IF              reduce using rule 5 (code -> function .)
    ELSE            reduce using rule 5 (code -> function .)
    DISTRIBUTION    reduce using rule 5 (code -> function .)
    EVENT           reduce using rule 5 (code -> function .)
    SHOW            reduce using rule 5 (code -> function .)
    TRAIT           reduce using rule 5 (code -> function .)
    NEUTRAL         reduce using rule 5 (code -> function .)
    SEA             reduce using rule 5 (code -> function .)
    PROVINCE        reduce using rule 5 (code -> function .)
    NATION          reduce using rule 5 (code -> function .)
    NOT             reduce using rule 5 (code -> function .)
    $end            reduce using rule 5 (code -> function .)
    }               reduce using rule 5 (code -> function .)


state 6

    (6) code -> element .
    MINUS           reduce using rule 6 (code -> element .)
    PLUS            reduce using rule 6 (code -> element .)
    XMINUS          reduce using rule 6 (code -> element .)
    XPLUS           reduce using rule 6 (code -> element .)
    (               reduce using rule 6 (code -> element .)
    [               reduce using rule 6 (code -> element .)
    BOOL            reduce using rule 6 (code -> element .)
    STRING          reduce using rule 6 (code -> element .)
    NUMBER          reduce using rule 6 (code -> element .)
    NAME            reduce using rule 6 (code -> element .)
    WHILE           reduce using rule 6 (code -> element .)
    IF              reduce using rule 6 (code -> element .)
    ELSE            reduce using rule 6 (code -> element .)
    DISTRIBUTION    reduce using rule 6 (code -> element .)
    EVENT           reduce using rule 6 (code -> element .)
    SHOW            reduce using rule 6 (code -> element .)
    TRAIT           reduce using rule 6 (code -> element .)
    NEUTRAL         reduce using rule 6 (code -> element .)
    SEA             reduce using rule 6 (code -> element .)
    PROVINCE        reduce using rule 6 (code -> element .)
    NATION          reduce using rule 6 (code -> element .)
    NOT             reduce using rule 6 (code -> element .)
    $end            reduce using rule 6 (code -> element .)
    }               reduce using rule 6 (code -> element .)


state 7

    (29) expr -> MINUS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 45
    condition                      shift and go to state 12

state 8

    (30) expr -> PLUS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 47
    condition                      shift and go to state 12

state 9

    (31) expr -> XMINUS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 48
    condition                      shift and go to state 12

state 10

    (32) expr -> XPLUS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 49
    condition                      shift and go to state 12

state 11

    (37) expr -> ( . expr )
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 50
    condition                      shift and go to state 12

state 12

    (38) expr -> condition .
    ARROW           reduce using rule 38 (expr -> condition .)
    DIVIDE          reduce using rule 38 (expr -> condition .)
    MULTIPLY        reduce using rule 38 (expr -> condition .)
    MINUS           reduce using rule 38 (expr -> condition .)
    PLUS            reduce using rule 38 (expr -> condition .)
    ELESS           reduce using rule 38 (expr -> condition .)
    EGREATER        reduce using rule 38 (expr -> condition .)
    LESS            reduce using rule 38 (expr -> condition .)
    GREATER         reduce using rule 38 (expr -> condition .)
    NOTEQUALS       reduce using rule 38 (expr -> condition .)
    EQUALS          reduce using rule 38 (expr -> condition .)
    XOR             reduce using rule 38 (expr -> condition .)
    OR              reduce using rule 38 (expr -> condition .)
    AND             reduce using rule 38 (expr -> condition .)
    XMINUS          reduce using rule 38 (expr -> condition .)
    XPLUS           reduce using rule 38 (expr -> condition .)
    (               reduce using rule 38 (expr -> condition .)
    [               reduce using rule 38 (expr -> condition .)
    BOOL            reduce using rule 38 (expr -> condition .)
    STRING          reduce using rule 38 (expr -> condition .)
    NUMBER          reduce using rule 38 (expr -> condition .)
    NAME            reduce using rule 38 (expr -> condition .)
    WHILE           reduce using rule 38 (expr -> condition .)
    IF              reduce using rule 38 (expr -> condition .)
    ELSE            reduce using rule 38 (expr -> condition .)
    DISTRIBUTION    reduce using rule 38 (expr -> condition .)
    EVENT           reduce using rule 38 (expr -> condition .)
    SHOW            reduce using rule 38 (expr -> condition .)
    TRAIT           reduce using rule 38 (expr -> condition .)
    NEUTRAL         reduce using rule 38 (expr -> condition .)
    SEA             reduce using rule 38 (expr -> condition .)
    PROVINCE        reduce using rule 38 (expr -> condition .)
    NATION          reduce using rule 38 (expr -> condition .)
    NOT             reduce using rule 38 (expr -> condition .)
    $end            reduce using rule 38 (expr -> condition .)
    }               reduce using rule 38 (expr -> condition .)
    )               reduce using rule 38 (expr -> condition .)
    ,               reduce using rule 38 (expr -> condition .)
    ]               reduce using rule 38 (expr -> condition .)
    {               reduce using rule 38 (expr -> condition .)


state 13

    (39) expr -> [ . list_expr ]
    (44) list_expr -> . expr
    (45) list_expr -> .
    (46) list_expr -> . expr , list_expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    ]               reduce using rule 45 (list_expr -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    list_expr                      shift and go to state 51
    expr                           shift and go to state 52
    condition                      shift and go to state 12

state 14

    (40) expr -> BOOL .
    ARROW           reduce using rule 40 (expr -> BOOL .)
    DIVIDE          reduce using rule 40 (expr -> BOOL .)
    MULTIPLY        reduce using rule 40 (expr -> BOOL .)
    MINUS           reduce using rule 40 (expr -> BOOL .)
    PLUS            reduce using rule 40 (expr -> BOOL .)
    ELESS           reduce using rule 40 (expr -> BOOL .)
    EGREATER        reduce using rule 40 (expr -> BOOL .)
    LESS            reduce using rule 40 (expr -> BOOL .)
    GREATER         reduce using rule 40 (expr -> BOOL .)
    NOTEQUALS       reduce using rule 40 (expr -> BOOL .)
    EQUALS          reduce using rule 40 (expr -> BOOL .)
    XOR             reduce using rule 40 (expr -> BOOL .)
    OR              reduce using rule 40 (expr -> BOOL .)
    AND             reduce using rule 40 (expr -> BOOL .)
    XMINUS          reduce using rule 40 (expr -> BOOL .)
    XPLUS           reduce using rule 40 (expr -> BOOL .)
    (               reduce using rule 40 (expr -> BOOL .)
    [               reduce using rule 40 (expr -> BOOL .)
    BOOL            reduce using rule 40 (expr -> BOOL .)
    STRING          reduce using rule 40 (expr -> BOOL .)
    NUMBER          reduce using rule 40 (expr -> BOOL .)
    NAME            reduce using rule 40 (expr -> BOOL .)
    WHILE           reduce using rule 40 (expr -> BOOL .)
    IF              reduce using rule 40 (expr -> BOOL .)
    ELSE            reduce using rule 40 (expr -> BOOL .)
    DISTRIBUTION    reduce using rule 40 (expr -> BOOL .)
    EVENT           reduce using rule 40 (expr -> BOOL .)
    SHOW            reduce using rule 40 (expr -> BOOL .)
    TRAIT           reduce using rule 40 (expr -> BOOL .)
    NEUTRAL         reduce using rule 40 (expr -> BOOL .)
    SEA             reduce using rule 40 (expr -> BOOL .)
    PROVINCE        reduce using rule 40 (expr -> BOOL .)
    NATION          reduce using rule 40 (expr -> BOOL .)
    NOT             reduce using rule 40 (expr -> BOOL .)
    $end            reduce using rule 40 (expr -> BOOL .)
    }               reduce using rule 40 (expr -> BOOL .)
    )               reduce using rule 40 (expr -> BOOL .)
    ,               reduce using rule 40 (expr -> BOOL .)
    ]               reduce using rule 40 (expr -> BOOL .)
    {               reduce using rule 40 (expr -> BOOL .)


state 15

    (41) expr -> STRING .
    ARROW           reduce using rule 41 (expr -> STRING .)
    DIVIDE          reduce using rule 41 (expr -> STRING .)
    MULTIPLY        reduce using rule 41 (expr -> STRING .)
    MINUS           reduce using rule 41 (expr -> STRING .)
    PLUS            reduce using rule 41 (expr -> STRING .)
    ELESS           reduce using rule 41 (expr -> STRING .)
    EGREATER        reduce using rule 41 (expr -> STRING .)
    LESS            reduce using rule 41 (expr -> STRING .)
    GREATER         reduce using rule 41 (expr -> STRING .)
    NOTEQUALS       reduce using rule 41 (expr -> STRING .)
    EQUALS          reduce using rule 41 (expr -> STRING .)
    XOR             reduce using rule 41 (expr -> STRING .)
    OR              reduce using rule 41 (expr -> STRING .)
    AND             reduce using rule 41 (expr -> STRING .)
    XMINUS          reduce using rule 41 (expr -> STRING .)
    XPLUS           reduce using rule 41 (expr -> STRING .)
    (               reduce using rule 41 (expr -> STRING .)
    [               reduce using rule 41 (expr -> STRING .)
    BOOL            reduce using rule 41 (expr -> STRING .)
    STRING          reduce using rule 41 (expr -> STRING .)
    NUMBER          reduce using rule 41 (expr -> STRING .)
    NAME            reduce using rule 41 (expr -> STRING .)
    WHILE           reduce using rule 41 (expr -> STRING .)
    IF              reduce using rule 41 (expr -> STRING .)
    ELSE            reduce using rule 41 (expr -> STRING .)
    DISTRIBUTION    reduce using rule 41 (expr -> STRING .)
    EVENT           reduce using rule 41 (expr -> STRING .)
    SHOW            reduce using rule 41 (expr -> STRING .)
    TRAIT           reduce using rule 41 (expr -> STRING .)
    NEUTRAL         reduce using rule 41 (expr -> STRING .)
    SEA             reduce using rule 41 (expr -> STRING .)
    PROVINCE        reduce using rule 41 (expr -> STRING .)
    NATION          reduce using rule 41 (expr -> STRING .)
    NOT             reduce using rule 41 (expr -> STRING .)
    $end            reduce using rule 41 (expr -> STRING .)
    }               reduce using rule 41 (expr -> STRING .)
    )               reduce using rule 41 (expr -> STRING .)
    ,               reduce using rule 41 (expr -> STRING .)
    ]               reduce using rule 41 (expr -> STRING .)
    {               reduce using rule 41 (expr -> STRING .)


state 16

    (42) expr -> NUMBER .
    ARROW           reduce using rule 42 (expr -> NUMBER .)
    DIVIDE          reduce using rule 42 (expr -> NUMBER .)
    MULTIPLY        reduce using rule 42 (expr -> NUMBER .)
    MINUS           reduce using rule 42 (expr -> NUMBER .)
    PLUS            reduce using rule 42 (expr -> NUMBER .)
    ELESS           reduce using rule 42 (expr -> NUMBER .)
    EGREATER        reduce using rule 42 (expr -> NUMBER .)
    LESS            reduce using rule 42 (expr -> NUMBER .)
    GREATER         reduce using rule 42 (expr -> NUMBER .)
    NOTEQUALS       reduce using rule 42 (expr -> NUMBER .)
    EQUALS          reduce using rule 42 (expr -> NUMBER .)
    XOR             reduce using rule 42 (expr -> NUMBER .)
    OR              reduce using rule 42 (expr -> NUMBER .)
    AND             reduce using rule 42 (expr -> NUMBER .)
    XMINUS          reduce using rule 42 (expr -> NUMBER .)
    XPLUS           reduce using rule 42 (expr -> NUMBER .)
    (               reduce using rule 42 (expr -> NUMBER .)
    [               reduce using rule 42 (expr -> NUMBER .)
    BOOL            reduce using rule 42 (expr -> NUMBER .)
    STRING          reduce using rule 42 (expr -> NUMBER .)
    NUMBER          reduce using rule 42 (expr -> NUMBER .)
    NAME            reduce using rule 42 (expr -> NUMBER .)
    WHILE           reduce using rule 42 (expr -> NUMBER .)
    IF              reduce using rule 42 (expr -> NUMBER .)
    ELSE            reduce using rule 42 (expr -> NUMBER .)
    DISTRIBUTION    reduce using rule 42 (expr -> NUMBER .)
    EVENT           reduce using rule 42 (expr -> NUMBER .)
    SHOW            reduce using rule 42 (expr -> NUMBER .)
    TRAIT           reduce using rule 42 (expr -> NUMBER .)
    NEUTRAL         reduce using rule 42 (expr -> NUMBER .)
    SEA             reduce using rule 42 (expr -> NUMBER .)
    PROVINCE        reduce using rule 42 (expr -> NUMBER .)
    NATION          reduce using rule 42 (expr -> NUMBER .)
    NOT             reduce using rule 42 (expr -> NUMBER .)
    $end            reduce using rule 42 (expr -> NUMBER .)
    }               reduce using rule 42 (expr -> NUMBER .)
    )               reduce using rule 42 (expr -> NUMBER .)
    ,               reduce using rule 42 (expr -> NUMBER .)
    ]               reduce using rule 42 (expr -> NUMBER .)
    {               reduce using rule 42 (expr -> NUMBER .)


state 17

    (43) expr -> NAME .
    (12) var -> NAME . ASSIGN expr
    ARROW           reduce using rule 43 (expr -> NAME .)
    DIVIDE          reduce using rule 43 (expr -> NAME .)
    MULTIPLY        reduce using rule 43 (expr -> NAME .)
    MINUS           reduce using rule 43 (expr -> NAME .)
    PLUS            reduce using rule 43 (expr -> NAME .)
    ELESS           reduce using rule 43 (expr -> NAME .)
    EGREATER        reduce using rule 43 (expr -> NAME .)
    LESS            reduce using rule 43 (expr -> NAME .)
    GREATER         reduce using rule 43 (expr -> NAME .)
    NOTEQUALS       reduce using rule 43 (expr -> NAME .)
    EQUALS          reduce using rule 43 (expr -> NAME .)
    XOR             reduce using rule 43 (expr -> NAME .)
    OR              reduce using rule 43 (expr -> NAME .)
    AND             reduce using rule 43 (expr -> NAME .)
    XMINUS          reduce using rule 43 (expr -> NAME .)
    XPLUS           reduce using rule 43 (expr -> NAME .)
    (               reduce using rule 43 (expr -> NAME .)
    [               reduce using rule 43 (expr -> NAME .)
    BOOL            reduce using rule 43 (expr -> NAME .)
    STRING          reduce using rule 43 (expr -> NAME .)
    NUMBER          reduce using rule 43 (expr -> NAME .)
    NAME            reduce using rule 43 (expr -> NAME .)
    WHILE           reduce using rule 43 (expr -> NAME .)
    IF              reduce using rule 43 (expr -> NAME .)
    ELSE            reduce using rule 43 (expr -> NAME .)
    DISTRIBUTION    reduce using rule 43 (expr -> NAME .)
    EVENT           reduce using rule 43 (expr -> NAME .)
    SHOW            reduce using rule 43 (expr -> NAME .)
    TRAIT           reduce using rule 43 (expr -> NAME .)
    NEUTRAL         reduce using rule 43 (expr -> NAME .)
    SEA             reduce using rule 43 (expr -> NAME .)
    PROVINCE        reduce using rule 43 (expr -> NAME .)
    NATION          reduce using rule 43 (expr -> NAME .)
    NOT             reduce using rule 43 (expr -> NAME .)
    $end            reduce using rule 43 (expr -> NAME .)
    }               reduce using rule 43 (expr -> NAME .)
    ASSIGN          shift and go to state 53


state 18

    (47) function -> WHILE . ( condition ) { script }
    (               shift and go to state 54


state 19

    (48) function -> IF . ( condition ) { script }
    (               shift and go to state 55


state 20

    (49) function -> ELSE . { script }
    {               shift and go to state 56


state 21

    (50) function -> DISTRIBUTION . NAME params { script }
    NAME            shift and go to state 57


state 22

    (51) function -> EVENT . NAME params { script }
    NAME            shift and go to state 58


state 23

    (52) function -> SHOW . ( expr )
    (               shift and go to state 59


state 24

    (7) element -> TRAIT . NAME params
    NAME            shift and go to state 60


state 25

    (8) element -> NEUTRAL . NAME params
    NAME            shift and go to state 61


state 26

    (9) element -> SEA . NAME params
    NAME            shift and go to state 62


state 27

    (10) element -> PROVINCE . NAME params
    NAME            shift and go to state 63


state 28

    (11) element -> NATION . NAME params
    NAME            shift and go to state 64


state 29

    (24) condition -> NOT . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 65
    condition                      shift and go to state 12

state 30

    (2) script -> code script .
    $end            reduce using rule 2 (script -> code script .)
    }               reduce using rule 2 (script -> code script .)


state 31

    (28) expr -> expr ARROW . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 66
    condition                      shift and go to state 12

state 32

    (33) expr -> expr DIVIDE . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 67
    condition                      shift and go to state 12

state 33

    (34) expr -> expr MULTIPLY . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 68
    condition                      shift and go to state 12

state 34

    (35) expr -> expr MINUS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 69
    condition                      shift and go to state 12

state 35

    (36) expr -> expr PLUS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 70
    condition                      shift and go to state 12

state 36

    (18) condition -> expr ELESS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 71
    condition                      shift and go to state 12

state 37

    (19) condition -> expr EGREATER . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 72
    condition                      shift and go to state 12

state 38

    (20) condition -> expr LESS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 73
    condition                      shift and go to state 12

state 39

    (21) condition -> expr GREATER . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 74
    condition                      shift and go to state 12

state 40

    (22) condition -> expr NOTEQUALS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 75
    condition                      shift and go to state 12

state 41

    (23) condition -> expr EQUALS . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 76
    condition                      shift and go to state 12

state 42

    (25) condition -> expr XOR . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 77
    condition                      shift and go to state 12

state 43

    (26) condition -> expr OR . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 78
    condition                      shift and go to state 12

state 44

    (27) condition -> expr AND . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 79
    condition                      shift and go to state 12

state 45

    (29) expr -> MINUS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 29 (expr -> MINUS expr .)
    MINUS           reduce using rule 29 (expr -> MINUS expr .)
    PLUS            reduce using rule 29 (expr -> MINUS expr .)
    XMINUS          reduce using rule 29 (expr -> MINUS expr .)
    XPLUS           reduce using rule 29 (expr -> MINUS expr .)
    (               reduce using rule 29 (expr -> MINUS expr .)
    [               reduce using rule 29 (expr -> MINUS expr .)
    BOOL            reduce using rule 29 (expr -> MINUS expr .)
    STRING          reduce using rule 29 (expr -> MINUS expr .)
    NUMBER          reduce using rule 29 (expr -> MINUS expr .)
    NAME            reduce using rule 29 (expr -> MINUS expr .)
    WHILE           reduce using rule 29 (expr -> MINUS expr .)
    IF              reduce using rule 29 (expr -> MINUS expr .)
    ELSE            reduce using rule 29 (expr -> MINUS expr .)
    DISTRIBUTION    reduce using rule 29 (expr -> MINUS expr .)
    EVENT           reduce using rule 29 (expr -> MINUS expr .)
    SHOW            reduce using rule 29 (expr -> MINUS expr .)
    TRAIT           reduce using rule 29 (expr -> MINUS expr .)
    NEUTRAL         reduce using rule 29 (expr -> MINUS expr .)
    SEA             reduce using rule 29 (expr -> MINUS expr .)
    PROVINCE        reduce using rule 29 (expr -> MINUS expr .)
    NATION          reduce using rule 29 (expr -> MINUS expr .)
    NOT             reduce using rule 29 (expr -> MINUS expr .)
    $end            reduce using rule 29 (expr -> MINUS expr .)
    }               reduce using rule 29 (expr -> MINUS expr .)
    )               reduce using rule 29 (expr -> MINUS expr .)
    ,               reduce using rule 29 (expr -> MINUS expr .)
    ]               reduce using rule 29 (expr -> MINUS expr .)
    {               reduce using rule 29 (expr -> MINUS expr .)
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 46

    (43) expr -> NAME .
    ARROW           reduce using rule 43 (expr -> NAME .)
    DIVIDE          reduce using rule 43 (expr -> NAME .)
    MULTIPLY        reduce using rule 43 (expr -> NAME .)
    MINUS           reduce using rule 43 (expr -> NAME .)
    PLUS            reduce using rule 43 (expr -> NAME .)
    ELESS           reduce using rule 43 (expr -> NAME .)
    EGREATER        reduce using rule 43 (expr -> NAME .)
    LESS            reduce using rule 43 (expr -> NAME .)
    GREATER         reduce using rule 43 (expr -> NAME .)
    NOTEQUALS       reduce using rule 43 (expr -> NAME .)
    EQUALS          reduce using rule 43 (expr -> NAME .)
    XOR             reduce using rule 43 (expr -> NAME .)
    OR              reduce using rule 43 (expr -> NAME .)
    AND             reduce using rule 43 (expr -> NAME .)
    XMINUS          reduce using rule 43 (expr -> NAME .)
    XPLUS           reduce using rule 43 (expr -> NAME .)
    (               reduce using rule 43 (expr -> NAME .)
    [               reduce using rule 43 (expr -> NAME .)
    BOOL            reduce using rule 43 (expr -> NAME .)
    STRING          reduce using rule 43 (expr -> NAME .)
    NUMBER          reduce using rule 43 (expr -> NAME .)
    NAME            reduce using rule 43 (expr -> NAME .)
    WHILE           reduce using rule 43 (expr -> NAME .)
    IF              reduce using rule 43 (expr -> NAME .)
    ELSE            reduce using rule 43 (expr -> NAME .)
    DISTRIBUTION    reduce using rule 43 (expr -> NAME .)
    EVENT           reduce using rule 43 (expr -> NAME .)
    SHOW            reduce using rule 43 (expr -> NAME .)
    TRAIT           reduce using rule 43 (expr -> NAME .)
    NEUTRAL         reduce using rule 43 (expr -> NAME .)
    SEA             reduce using rule 43 (expr -> NAME .)
    PROVINCE        reduce using rule 43 (expr -> NAME .)
    NATION          reduce using rule 43 (expr -> NAME .)
    NOT             reduce using rule 43 (expr -> NAME .)
    $end            reduce using rule 43 (expr -> NAME .)
    }               reduce using rule 43 (expr -> NAME .)
    )               reduce using rule 43 (expr -> NAME .)
    ,               reduce using rule 43 (expr -> NAME .)
    ]               reduce using rule 43 (expr -> NAME .)
    {               reduce using rule 43 (expr -> NAME .)


state 47

    (30) expr -> PLUS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 30 (expr -> PLUS expr .)
    MINUS           reduce using rule 30 (expr -> PLUS expr .)
    PLUS            reduce using rule 30 (expr -> PLUS expr .)
    XMINUS          reduce using rule 30 (expr -> PLUS expr .)
    XPLUS           reduce using rule 30 (expr -> PLUS expr .)
    (               reduce using rule 30 (expr -> PLUS expr .)
    [               reduce using rule 30 (expr -> PLUS expr .)
    BOOL            reduce using rule 30 (expr -> PLUS expr .)
    STRING          reduce using rule 30 (expr -> PLUS expr .)
    NUMBER          reduce using rule 30 (expr -> PLUS expr .)
    NAME            reduce using rule 30 (expr -> PLUS expr .)
    WHILE           reduce using rule 30 (expr -> PLUS expr .)
    IF              reduce using rule 30 (expr -> PLUS expr .)
    ELSE            reduce using rule 30 (expr -> PLUS expr .)
    DISTRIBUTION    reduce using rule 30 (expr -> PLUS expr .)
    EVENT           reduce using rule 30 (expr -> PLUS expr .)
    SHOW            reduce using rule 30 (expr -> PLUS expr .)
    TRAIT           reduce using rule 30 (expr -> PLUS expr .)
    NEUTRAL         reduce using rule 30 (expr -> PLUS expr .)
    SEA             reduce using rule 30 (expr -> PLUS expr .)
    PROVINCE        reduce using rule 30 (expr -> PLUS expr .)
    NATION          reduce using rule 30 (expr -> PLUS expr .)
    NOT             reduce using rule 30 (expr -> PLUS expr .)
    $end            reduce using rule 30 (expr -> PLUS expr .)
    }               reduce using rule 30 (expr -> PLUS expr .)
    )               reduce using rule 30 (expr -> PLUS expr .)
    ,               reduce using rule 30 (expr -> PLUS expr .)
    ]               reduce using rule 30 (expr -> PLUS expr .)
    {               reduce using rule 30 (expr -> PLUS expr .)
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 48

    (31) expr -> XMINUS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for ELESS resolved as shift
  ! shift/reduce conflict for EGREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    XMINUS          reduce using rule 31 (expr -> XMINUS expr .)
    XPLUS           reduce using rule 31 (expr -> XMINUS expr .)
    (               reduce using rule 31 (expr -> XMINUS expr .)
    [               reduce using rule 31 (expr -> XMINUS expr .)
    BOOL            reduce using rule 31 (expr -> XMINUS expr .)
    STRING          reduce using rule 31 (expr -> XMINUS expr .)
    NUMBER          reduce using rule 31 (expr -> XMINUS expr .)
    NAME            reduce using rule 31 (expr -> XMINUS expr .)
    WHILE           reduce using rule 31 (expr -> XMINUS expr .)
    IF              reduce using rule 31 (expr -> XMINUS expr .)
    ELSE            reduce using rule 31 (expr -> XMINUS expr .)
    DISTRIBUTION    reduce using rule 31 (expr -> XMINUS expr .)
    EVENT           reduce using rule 31 (expr -> XMINUS expr .)
    SHOW            reduce using rule 31 (expr -> XMINUS expr .)
    TRAIT           reduce using rule 31 (expr -> XMINUS expr .)
    NEUTRAL         reduce using rule 31 (expr -> XMINUS expr .)
    SEA             reduce using rule 31 (expr -> XMINUS expr .)
    PROVINCE        reduce using rule 31 (expr -> XMINUS expr .)
    NATION          reduce using rule 31 (expr -> XMINUS expr .)
    NOT             reduce using rule 31 (expr -> XMINUS expr .)
    $end            reduce using rule 31 (expr -> XMINUS expr .)
    }               reduce using rule 31 (expr -> XMINUS expr .)
    )               reduce using rule 31 (expr -> XMINUS expr .)
    ,               reduce using rule 31 (expr -> XMINUS expr .)
    ]               reduce using rule 31 (expr -> XMINUS expr .)
    {               reduce using rule 31 (expr -> XMINUS expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 49

    (32) expr -> XPLUS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for ELESS resolved as shift
  ! shift/reduce conflict for EGREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    XMINUS          reduce using rule 32 (expr -> XPLUS expr .)
    XPLUS           reduce using rule 32 (expr -> XPLUS expr .)
    (               reduce using rule 32 (expr -> XPLUS expr .)
    [               reduce using rule 32 (expr -> XPLUS expr .)
    BOOL            reduce using rule 32 (expr -> XPLUS expr .)
    STRING          reduce using rule 32 (expr -> XPLUS expr .)
    NUMBER          reduce using rule 32 (expr -> XPLUS expr .)
    NAME            reduce using rule 32 (expr -> XPLUS expr .)
    WHILE           reduce using rule 32 (expr -> XPLUS expr .)
    IF              reduce using rule 32 (expr -> XPLUS expr .)
    ELSE            reduce using rule 32 (expr -> XPLUS expr .)
    DISTRIBUTION    reduce using rule 32 (expr -> XPLUS expr .)
    EVENT           reduce using rule 32 (expr -> XPLUS expr .)
    SHOW            reduce using rule 32 (expr -> XPLUS expr .)
    TRAIT           reduce using rule 32 (expr -> XPLUS expr .)
    NEUTRAL         reduce using rule 32 (expr -> XPLUS expr .)
    SEA             reduce using rule 32 (expr -> XPLUS expr .)
    PROVINCE        reduce using rule 32 (expr -> XPLUS expr .)
    NATION          reduce using rule 32 (expr -> XPLUS expr .)
    NOT             reduce using rule 32 (expr -> XPLUS expr .)
    $end            reduce using rule 32 (expr -> XPLUS expr .)
    }               reduce using rule 32 (expr -> XPLUS expr .)
    )               reduce using rule 32 (expr -> XPLUS expr .)
    ,               reduce using rule 32 (expr -> XPLUS expr .)
    ]               reduce using rule 32 (expr -> XPLUS expr .)
    {               reduce using rule 32 (expr -> XPLUS expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 50

    (37) expr -> ( expr . )
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    )               shift and go to state 80
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 51

    (39) expr -> [ list_expr . ]
    ]               shift and go to state 81


state 52

    (44) list_expr -> expr .
    (46) list_expr -> expr . , list_expr
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ]               reduce using rule 44 (list_expr -> expr .)
    ,               shift and go to state 82
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 53

    (12) var -> NAME ASSIGN . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 83
    condition                      shift and go to state 12

state 54

    (47) function -> WHILE ( . condition ) { script }
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    NOT             shift and go to state 29
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46

    condition                      shift and go to state 84
    expr                           shift and go to state 85

state 55

    (48) function -> IF ( . condition ) { script }
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    NOT             shift and go to state 29
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46

    condition                      shift and go to state 86
    expr                           shift and go to state 85

state 56

    (49) function -> ELSE { . script }
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    }               reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    script                         shift and go to state 87
    code                           shift and go to state 2
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6
    condition                      shift and go to state 12

state 57

    (50) function -> DISTRIBUTION NAME . params { script }
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
    {               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 89
    param                          shift and go to state 90

state 58

    (51) function -> EVENT NAME . params { script }
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
    {               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 92
    param                          shift and go to state 90

state 59

    (52) function -> SHOW ( . expr )
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 93
    condition                      shift and go to state 12

state 60

    (7) element -> TRAIT NAME . params
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    MINUS           reduce using rule 13 (params -> .)
    PLUS            reduce using rule 13 (params -> .)
    XMINUS          reduce using rule 13 (params -> .)
    XPLUS           reduce using rule 13 (params -> .)
    [               reduce using rule 13 (params -> .)
    BOOL            reduce using rule 13 (params -> .)
    STRING          reduce using rule 13 (params -> .)
    NUMBER          reduce using rule 13 (params -> .)
    WHILE           reduce using rule 13 (params -> .)
    IF              reduce using rule 13 (params -> .)
    ELSE            reduce using rule 13 (params -> .)
    DISTRIBUTION    reduce using rule 13 (params -> .)
    EVENT           reduce using rule 13 (params -> .)
    SHOW            reduce using rule 13 (params -> .)
    TRAIT           reduce using rule 13 (params -> .)
    NEUTRAL         reduce using rule 13 (params -> .)
    SEA             reduce using rule 13 (params -> .)
    PROVINCE        reduce using rule 13 (params -> .)
    NATION          reduce using rule 13 (params -> .)
    NOT             reduce using rule 13 (params -> .)
    $end            reduce using rule 13 (params -> .)
    }               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 94
    param                          shift and go to state 90

state 61

    (8) element -> NEUTRAL NAME . params
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    MINUS           reduce using rule 13 (params -> .)
    PLUS            reduce using rule 13 (params -> .)
    XMINUS          reduce using rule 13 (params -> .)
    XPLUS           reduce using rule 13 (params -> .)
    [               reduce using rule 13 (params -> .)
    BOOL            reduce using rule 13 (params -> .)
    STRING          reduce using rule 13 (params -> .)
    NUMBER          reduce using rule 13 (params -> .)
    WHILE           reduce using rule 13 (params -> .)
    IF              reduce using rule 13 (params -> .)
    ELSE            reduce using rule 13 (params -> .)
    DISTRIBUTION    reduce using rule 13 (params -> .)
    EVENT           reduce using rule 13 (params -> .)
    SHOW            reduce using rule 13 (params -> .)
    TRAIT           reduce using rule 13 (params -> .)
    NEUTRAL         reduce using rule 13 (params -> .)
    SEA             reduce using rule 13 (params -> .)
    PROVINCE        reduce using rule 13 (params -> .)
    NATION          reduce using rule 13 (params -> .)
    NOT             reduce using rule 13 (params -> .)
    $end            reduce using rule 13 (params -> .)
    }               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 95
    param                          shift and go to state 90

state 62

    (9) element -> SEA NAME . params
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    MINUS           reduce using rule 13 (params -> .)
    PLUS            reduce using rule 13 (params -> .)
    XMINUS          reduce using rule 13 (params -> .)
    XPLUS           reduce using rule 13 (params -> .)
    [               reduce using rule 13 (params -> .)
    BOOL            reduce using rule 13 (params -> .)
    STRING          reduce using rule 13 (params -> .)
    NUMBER          reduce using rule 13 (params -> .)
    WHILE           reduce using rule 13 (params -> .)
    IF              reduce using rule 13 (params -> .)
    ELSE            reduce using rule 13 (params -> .)
    DISTRIBUTION    reduce using rule 13 (params -> .)
    EVENT           reduce using rule 13 (params -> .)
    SHOW            reduce using rule 13 (params -> .)
    TRAIT           reduce using rule 13 (params -> .)
    NEUTRAL         reduce using rule 13 (params -> .)
    SEA             reduce using rule 13 (params -> .)
    PROVINCE        reduce using rule 13 (params -> .)
    NATION          reduce using rule 13 (params -> .)
    NOT             reduce using rule 13 (params -> .)
    $end            reduce using rule 13 (params -> .)
    }               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 96
    param                          shift and go to state 90

state 63

    (10) element -> PROVINCE NAME . params
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    MINUS           reduce using rule 13 (params -> .)
    PLUS            reduce using rule 13 (params -> .)
    XMINUS          reduce using rule 13 (params -> .)
    XPLUS           reduce using rule 13 (params -> .)
    [               reduce using rule 13 (params -> .)
    BOOL            reduce using rule 13 (params -> .)
    STRING          reduce using rule 13 (params -> .)
    NUMBER          reduce using rule 13 (params -> .)
    WHILE           reduce using rule 13 (params -> .)
    IF              reduce using rule 13 (params -> .)
    ELSE            reduce using rule 13 (params -> .)
    DISTRIBUTION    reduce using rule 13 (params -> .)
    EVENT           reduce using rule 13 (params -> .)
    SHOW            reduce using rule 13 (params -> .)
    TRAIT           reduce using rule 13 (params -> .)
    NEUTRAL         reduce using rule 13 (params -> .)
    SEA             reduce using rule 13 (params -> .)
    PROVINCE        reduce using rule 13 (params -> .)
    NATION          reduce using rule 13 (params -> .)
    NOT             reduce using rule 13 (params -> .)
    $end            reduce using rule 13 (params -> .)
    }               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 97
    param                          shift and go to state 90

state 64

    (11) element -> NATION NAME . params
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    MINUS           reduce using rule 13 (params -> .)
    PLUS            reduce using rule 13 (params -> .)
    XMINUS          reduce using rule 13 (params -> .)
    XPLUS           reduce using rule 13 (params -> .)
    [               reduce using rule 13 (params -> .)
    BOOL            reduce using rule 13 (params -> .)
    STRING          reduce using rule 13 (params -> .)
    NUMBER          reduce using rule 13 (params -> .)
    WHILE           reduce using rule 13 (params -> .)
    IF              reduce using rule 13 (params -> .)
    ELSE            reduce using rule 13 (params -> .)
    DISTRIBUTION    reduce using rule 13 (params -> .)
    EVENT           reduce using rule 13 (params -> .)
    SHOW            reduce using rule 13 (params -> .)
    TRAIT           reduce using rule 13 (params -> .)
    NEUTRAL         reduce using rule 13 (params -> .)
    SEA             reduce using rule 13 (params -> .)
    PROVINCE        reduce using rule 13 (params -> .)
    NATION          reduce using rule 13 (params -> .)
    NOT             reduce using rule 13 (params -> .)
    $end            reduce using rule 13 (params -> .)
    }               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 98
    param                          shift and go to state 90

state 65

    (24) condition -> NOT expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for ELESS resolved as shift
  ! shift/reduce conflict for EGREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    XMINUS          reduce using rule 24 (condition -> NOT expr .)
    XPLUS           reduce using rule 24 (condition -> NOT expr .)
    (               reduce using rule 24 (condition -> NOT expr .)
    [               reduce using rule 24 (condition -> NOT expr .)
    BOOL            reduce using rule 24 (condition -> NOT expr .)
    STRING          reduce using rule 24 (condition -> NOT expr .)
    NUMBER          reduce using rule 24 (condition -> NOT expr .)
    NAME            reduce using rule 24 (condition -> NOT expr .)
    WHILE           reduce using rule 24 (condition -> NOT expr .)
    IF              reduce using rule 24 (condition -> NOT expr .)
    ELSE            reduce using rule 24 (condition -> NOT expr .)
    DISTRIBUTION    reduce using rule 24 (condition -> NOT expr .)
    EVENT           reduce using rule 24 (condition -> NOT expr .)
    SHOW            reduce using rule 24 (condition -> NOT expr .)
    TRAIT           reduce using rule 24 (condition -> NOT expr .)
    NEUTRAL         reduce using rule 24 (condition -> NOT expr .)
    SEA             reduce using rule 24 (condition -> NOT expr .)
    PROVINCE        reduce using rule 24 (condition -> NOT expr .)
    NATION          reduce using rule 24 (condition -> NOT expr .)
    NOT             reduce using rule 24 (condition -> NOT expr .)
    $end            reduce using rule 24 (condition -> NOT expr .)
    }               reduce using rule 24 (condition -> NOT expr .)
    )               reduce using rule 24 (condition -> NOT expr .)
    ,               reduce using rule 24 (condition -> NOT expr .)
    ]               reduce using rule 24 (condition -> NOT expr .)
    {               reduce using rule 24 (condition -> NOT expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 66

    (28) expr -> expr ARROW expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for ELESS resolved as shift
  ! shift/reduce conflict for EGREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for NOTEQUALS resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    XMINUS          reduce using rule 28 (expr -> expr ARROW expr .)
    XPLUS           reduce using rule 28 (expr -> expr ARROW expr .)
    (               reduce using rule 28 (expr -> expr ARROW expr .)
    [               reduce using rule 28 (expr -> expr ARROW expr .)
    BOOL            reduce using rule 28 (expr -> expr ARROW expr .)
    STRING          reduce using rule 28 (expr -> expr ARROW expr .)
    NUMBER          reduce using rule 28 (expr -> expr ARROW expr .)
    NAME            reduce using rule 28 (expr -> expr ARROW expr .)
    WHILE           reduce using rule 28 (expr -> expr ARROW expr .)
    IF              reduce using rule 28 (expr -> expr ARROW expr .)
    ELSE            reduce using rule 28 (expr -> expr ARROW expr .)
    DISTRIBUTION    reduce using rule 28 (expr -> expr ARROW expr .)
    EVENT           reduce using rule 28 (expr -> expr ARROW expr .)
    SHOW            reduce using rule 28 (expr -> expr ARROW expr .)
    TRAIT           reduce using rule 28 (expr -> expr ARROW expr .)
    NEUTRAL         reduce using rule 28 (expr -> expr ARROW expr .)
    SEA             reduce using rule 28 (expr -> expr ARROW expr .)
    PROVINCE        reduce using rule 28 (expr -> expr ARROW expr .)
    NATION          reduce using rule 28 (expr -> expr ARROW expr .)
    NOT             reduce using rule 28 (expr -> expr ARROW expr .)
    $end            reduce using rule 28 (expr -> expr ARROW expr .)
    }               reduce using rule 28 (expr -> expr ARROW expr .)
    )               reduce using rule 28 (expr -> expr ARROW expr .)
    ,               reduce using rule 28 (expr -> expr ARROW expr .)
    ]               reduce using rule 28 (expr -> expr ARROW expr .)
    {               reduce using rule 28 (expr -> expr ARROW expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 67

    (33) expr -> expr DIVIDE expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 33 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 33 (expr -> expr DIVIDE expr .)
    MULTIPLY        reduce using rule 33 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 33 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 33 (expr -> expr DIVIDE expr .)
    XMINUS          reduce using rule 33 (expr -> expr DIVIDE expr .)
    XPLUS           reduce using rule 33 (expr -> expr DIVIDE expr .)
    (               reduce using rule 33 (expr -> expr DIVIDE expr .)
    [               reduce using rule 33 (expr -> expr DIVIDE expr .)
    BOOL            reduce using rule 33 (expr -> expr DIVIDE expr .)
    STRING          reduce using rule 33 (expr -> expr DIVIDE expr .)
    NUMBER          reduce using rule 33 (expr -> expr DIVIDE expr .)
    NAME            reduce using rule 33 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 33 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 33 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 33 (expr -> expr DIVIDE expr .)
    DISTRIBUTION    reduce using rule 33 (expr -> expr DIVIDE expr .)
    EVENT           reduce using rule 33 (expr -> expr DIVIDE expr .)
    SHOW            reduce using rule 33 (expr -> expr DIVIDE expr .)
    TRAIT           reduce using rule 33 (expr -> expr DIVIDE expr .)
    NEUTRAL         reduce using rule 33 (expr -> expr DIVIDE expr .)
    SEA             reduce using rule 33 (expr -> expr DIVIDE expr .)
    PROVINCE        reduce using rule 33 (expr -> expr DIVIDE expr .)
    NATION          reduce using rule 33 (expr -> expr DIVIDE expr .)
    NOT             reduce using rule 33 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 33 (expr -> expr DIVIDE expr .)
    }               reduce using rule 33 (expr -> expr DIVIDE expr .)
    )               reduce using rule 33 (expr -> expr DIVIDE expr .)
    ,               reduce using rule 33 (expr -> expr DIVIDE expr .)
    ]               reduce using rule 33 (expr -> expr DIVIDE expr .)
    {               reduce using rule 33 (expr -> expr DIVIDE expr .)
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 68

    (34) expr -> expr MULTIPLY expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 34 (expr -> expr MULTIPLY expr .)
    DIVIDE          reduce using rule 34 (expr -> expr MULTIPLY expr .)
    MULTIPLY        reduce using rule 34 (expr -> expr MULTIPLY expr .)
    MINUS           reduce using rule 34 (expr -> expr MULTIPLY expr .)
    PLUS            reduce using rule 34 (expr -> expr MULTIPLY expr .)
    XMINUS          reduce using rule 34 (expr -> expr MULTIPLY expr .)
    XPLUS           reduce using rule 34 (expr -> expr MULTIPLY expr .)
    (               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    [               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    BOOL            reduce using rule 34 (expr -> expr MULTIPLY expr .)
    STRING          reduce using rule 34 (expr -> expr MULTIPLY expr .)
    NUMBER          reduce using rule 34 (expr -> expr MULTIPLY expr .)
    NAME            reduce using rule 34 (expr -> expr MULTIPLY expr .)
    WHILE           reduce using rule 34 (expr -> expr MULTIPLY expr .)
    IF              reduce using rule 34 (expr -> expr MULTIPLY expr .)
    ELSE            reduce using rule 34 (expr -> expr MULTIPLY expr .)
    DISTRIBUTION    reduce using rule 34 (expr -> expr MULTIPLY expr .)
    EVENT           reduce using rule 34 (expr -> expr MULTIPLY expr .)
    SHOW            reduce using rule 34 (expr -> expr MULTIPLY expr .)
    TRAIT           reduce using rule 34 (expr -> expr MULTIPLY expr .)
    NEUTRAL         reduce using rule 34 (expr -> expr MULTIPLY expr .)
    SEA             reduce using rule 34 (expr -> expr MULTIPLY expr .)
    PROVINCE        reduce using rule 34 (expr -> expr MULTIPLY expr .)
    NATION          reduce using rule 34 (expr -> expr MULTIPLY expr .)
    NOT             reduce using rule 34 (expr -> expr MULTIPLY expr .)
    $end            reduce using rule 34 (expr -> expr MULTIPLY expr .)
    }               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    )               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    ,               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    ]               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    {               reduce using rule 34 (expr -> expr MULTIPLY expr .)
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 69

    (35) expr -> expr MINUS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 35 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 35 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 35 (expr -> expr MINUS expr .)
    XMINUS          reduce using rule 35 (expr -> expr MINUS expr .)
    XPLUS           reduce using rule 35 (expr -> expr MINUS expr .)
    (               reduce using rule 35 (expr -> expr MINUS expr .)
    [               reduce using rule 35 (expr -> expr MINUS expr .)
    BOOL            reduce using rule 35 (expr -> expr MINUS expr .)
    STRING          reduce using rule 35 (expr -> expr MINUS expr .)
    NUMBER          reduce using rule 35 (expr -> expr MINUS expr .)
    NAME            reduce using rule 35 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 35 (expr -> expr MINUS expr .)
    IF              reduce using rule 35 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 35 (expr -> expr MINUS expr .)
    DISTRIBUTION    reduce using rule 35 (expr -> expr MINUS expr .)
    EVENT           reduce using rule 35 (expr -> expr MINUS expr .)
    SHOW            reduce using rule 35 (expr -> expr MINUS expr .)
    TRAIT           reduce using rule 35 (expr -> expr MINUS expr .)
    NEUTRAL         reduce using rule 35 (expr -> expr MINUS expr .)
    SEA             reduce using rule 35 (expr -> expr MINUS expr .)
    PROVINCE        reduce using rule 35 (expr -> expr MINUS expr .)
    NATION          reduce using rule 35 (expr -> expr MINUS expr .)
    NOT             reduce using rule 35 (expr -> expr MINUS expr .)
    $end            reduce using rule 35 (expr -> expr MINUS expr .)
    }               reduce using rule 35 (expr -> expr MINUS expr .)
    )               reduce using rule 35 (expr -> expr MINUS expr .)
    ,               reduce using rule 35 (expr -> expr MINUS expr .)
    ]               reduce using rule 35 (expr -> expr MINUS expr .)
    {               reduce using rule 35 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 70

    (36) expr -> expr PLUS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 36 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 36 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 36 (expr -> expr PLUS expr .)
    XMINUS          reduce using rule 36 (expr -> expr PLUS expr .)
    XPLUS           reduce using rule 36 (expr -> expr PLUS expr .)
    (               reduce using rule 36 (expr -> expr PLUS expr .)
    [               reduce using rule 36 (expr -> expr PLUS expr .)
    BOOL            reduce using rule 36 (expr -> expr PLUS expr .)
    STRING          reduce using rule 36 (expr -> expr PLUS expr .)
    NUMBER          reduce using rule 36 (expr -> expr PLUS expr .)
    NAME            reduce using rule 36 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 36 (expr -> expr PLUS expr .)
    IF              reduce using rule 36 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 36 (expr -> expr PLUS expr .)
    DISTRIBUTION    reduce using rule 36 (expr -> expr PLUS expr .)
    EVENT           reduce using rule 36 (expr -> expr PLUS expr .)
    SHOW            reduce using rule 36 (expr -> expr PLUS expr .)
    TRAIT           reduce using rule 36 (expr -> expr PLUS expr .)
    NEUTRAL         reduce using rule 36 (expr -> expr PLUS expr .)
    SEA             reduce using rule 36 (expr -> expr PLUS expr .)
    PROVINCE        reduce using rule 36 (expr -> expr PLUS expr .)
    NATION          reduce using rule 36 (expr -> expr PLUS expr .)
    NOT             reduce using rule 36 (expr -> expr PLUS expr .)
    $end            reduce using rule 36 (expr -> expr PLUS expr .)
    }               reduce using rule 36 (expr -> expr PLUS expr .)
    )               reduce using rule 36 (expr -> expr PLUS expr .)
    ,               reduce using rule 36 (expr -> expr PLUS expr .)
    ]               reduce using rule 36 (expr -> expr PLUS expr .)
    {               reduce using rule 36 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 71

    (18) condition -> expr ELESS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 18 (condition -> expr ELESS expr .)
    DIVIDE          reduce using rule 18 (condition -> expr ELESS expr .)
    MULTIPLY        reduce using rule 18 (condition -> expr ELESS expr .)
    MINUS           reduce using rule 18 (condition -> expr ELESS expr .)
    PLUS            reduce using rule 18 (condition -> expr ELESS expr .)
    ELESS           reduce using rule 18 (condition -> expr ELESS expr .)
    EGREATER        reduce using rule 18 (condition -> expr ELESS expr .)
    LESS            reduce using rule 18 (condition -> expr ELESS expr .)
    GREATER         reduce using rule 18 (condition -> expr ELESS expr .)
    NOTEQUALS       reduce using rule 18 (condition -> expr ELESS expr .)
    EQUALS          reduce using rule 18 (condition -> expr ELESS expr .)
    XOR             reduce using rule 18 (condition -> expr ELESS expr .)
    OR              reduce using rule 18 (condition -> expr ELESS expr .)
    AND             reduce using rule 18 (condition -> expr ELESS expr .)
    XMINUS          reduce using rule 18 (condition -> expr ELESS expr .)
    XPLUS           reduce using rule 18 (condition -> expr ELESS expr .)
    (               reduce using rule 18 (condition -> expr ELESS expr .)
    [               reduce using rule 18 (condition -> expr ELESS expr .)
    BOOL            reduce using rule 18 (condition -> expr ELESS expr .)
    STRING          reduce using rule 18 (condition -> expr ELESS expr .)
    NUMBER          reduce using rule 18 (condition -> expr ELESS expr .)
    NAME            reduce using rule 18 (condition -> expr ELESS expr .)
    WHILE           reduce using rule 18 (condition -> expr ELESS expr .)
    IF              reduce using rule 18 (condition -> expr ELESS expr .)
    ELSE            reduce using rule 18 (condition -> expr ELESS expr .)
    DISTRIBUTION    reduce using rule 18 (condition -> expr ELESS expr .)
    EVENT           reduce using rule 18 (condition -> expr ELESS expr .)
    SHOW            reduce using rule 18 (condition -> expr ELESS expr .)
    TRAIT           reduce using rule 18 (condition -> expr ELESS expr .)
    NEUTRAL         reduce using rule 18 (condition -> expr ELESS expr .)
    SEA             reduce using rule 18 (condition -> expr ELESS expr .)
    PROVINCE        reduce using rule 18 (condition -> expr ELESS expr .)
    NATION          reduce using rule 18 (condition -> expr ELESS expr .)
    NOT             reduce using rule 18 (condition -> expr ELESS expr .)
    $end            reduce using rule 18 (condition -> expr ELESS expr .)
    }               reduce using rule 18 (condition -> expr ELESS expr .)
    )               reduce using rule 18 (condition -> expr ELESS expr .)
    ,               reduce using rule 18 (condition -> expr ELESS expr .)
    ]               reduce using rule 18 (condition -> expr ELESS expr .)
    {               reduce using rule 18 (condition -> expr ELESS expr .)


state 72

    (19) condition -> expr EGREATER expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 19 (condition -> expr EGREATER expr .)
    DIVIDE          reduce using rule 19 (condition -> expr EGREATER expr .)
    MULTIPLY        reduce using rule 19 (condition -> expr EGREATER expr .)
    MINUS           reduce using rule 19 (condition -> expr EGREATER expr .)
    PLUS            reduce using rule 19 (condition -> expr EGREATER expr .)
    ELESS           reduce using rule 19 (condition -> expr EGREATER expr .)
    EGREATER        reduce using rule 19 (condition -> expr EGREATER expr .)
    LESS            reduce using rule 19 (condition -> expr EGREATER expr .)
    GREATER         reduce using rule 19 (condition -> expr EGREATER expr .)
    NOTEQUALS       reduce using rule 19 (condition -> expr EGREATER expr .)
    EQUALS          reduce using rule 19 (condition -> expr EGREATER expr .)
    XOR             reduce using rule 19 (condition -> expr EGREATER expr .)
    OR              reduce using rule 19 (condition -> expr EGREATER expr .)
    AND             reduce using rule 19 (condition -> expr EGREATER expr .)
    XMINUS          reduce using rule 19 (condition -> expr EGREATER expr .)
    XPLUS           reduce using rule 19 (condition -> expr EGREATER expr .)
    (               reduce using rule 19 (condition -> expr EGREATER expr .)
    [               reduce using rule 19 (condition -> expr EGREATER expr .)
    BOOL            reduce using rule 19 (condition -> expr EGREATER expr .)
    STRING          reduce using rule 19 (condition -> expr EGREATER expr .)
    NUMBER          reduce using rule 19 (condition -> expr EGREATER expr .)
    NAME            reduce using rule 19 (condition -> expr EGREATER expr .)
    WHILE           reduce using rule 19 (condition -> expr EGREATER expr .)
    IF              reduce using rule 19 (condition -> expr EGREATER expr .)
    ELSE            reduce using rule 19 (condition -> expr EGREATER expr .)
    DISTRIBUTION    reduce using rule 19 (condition -> expr EGREATER expr .)
    EVENT           reduce using rule 19 (condition -> expr EGREATER expr .)
    SHOW            reduce using rule 19 (condition -> expr EGREATER expr .)
    TRAIT           reduce using rule 19 (condition -> expr EGREATER expr .)
    NEUTRAL         reduce using rule 19 (condition -> expr EGREATER expr .)
    SEA             reduce using rule 19 (condition -> expr EGREATER expr .)
    PROVINCE        reduce using rule 19 (condition -> expr EGREATER expr .)
    NATION          reduce using rule 19 (condition -> expr EGREATER expr .)
    NOT             reduce using rule 19 (condition -> expr EGREATER expr .)
    $end            reduce using rule 19 (condition -> expr EGREATER expr .)
    }               reduce using rule 19 (condition -> expr EGREATER expr .)
    )               reduce using rule 19 (condition -> expr EGREATER expr .)
    ,               reduce using rule 19 (condition -> expr EGREATER expr .)
    ]               reduce using rule 19 (condition -> expr EGREATER expr .)
    {               reduce using rule 19 (condition -> expr EGREATER expr .)


state 73

    (20) condition -> expr LESS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 20 (condition -> expr LESS expr .)
    DIVIDE          reduce using rule 20 (condition -> expr LESS expr .)
    MULTIPLY        reduce using rule 20 (condition -> expr LESS expr .)
    MINUS           reduce using rule 20 (condition -> expr LESS expr .)
    PLUS            reduce using rule 20 (condition -> expr LESS expr .)
    ELESS           reduce using rule 20 (condition -> expr LESS expr .)
    EGREATER        reduce using rule 20 (condition -> expr LESS expr .)
    LESS            reduce using rule 20 (condition -> expr LESS expr .)
    GREATER         reduce using rule 20 (condition -> expr LESS expr .)
    NOTEQUALS       reduce using rule 20 (condition -> expr LESS expr .)
    EQUALS          reduce using rule 20 (condition -> expr LESS expr .)
    XOR             reduce using rule 20 (condition -> expr LESS expr .)
    OR              reduce using rule 20 (condition -> expr LESS expr .)
    AND             reduce using rule 20 (condition -> expr LESS expr .)
    XMINUS          reduce using rule 20 (condition -> expr LESS expr .)
    XPLUS           reduce using rule 20 (condition -> expr LESS expr .)
    (               reduce using rule 20 (condition -> expr LESS expr .)
    [               reduce using rule 20 (condition -> expr LESS expr .)
    BOOL            reduce using rule 20 (condition -> expr LESS expr .)
    STRING          reduce using rule 20 (condition -> expr LESS expr .)
    NUMBER          reduce using rule 20 (condition -> expr LESS expr .)
    NAME            reduce using rule 20 (condition -> expr LESS expr .)
    WHILE           reduce using rule 20 (condition -> expr LESS expr .)
    IF              reduce using rule 20 (condition -> expr LESS expr .)
    ELSE            reduce using rule 20 (condition -> expr LESS expr .)
    DISTRIBUTION    reduce using rule 20 (condition -> expr LESS expr .)
    EVENT           reduce using rule 20 (condition -> expr LESS expr .)
    SHOW            reduce using rule 20 (condition -> expr LESS expr .)
    TRAIT           reduce using rule 20 (condition -> expr LESS expr .)
    NEUTRAL         reduce using rule 20 (condition -> expr LESS expr .)
    SEA             reduce using rule 20 (condition -> expr LESS expr .)
    PROVINCE        reduce using rule 20 (condition -> expr LESS expr .)
    NATION          reduce using rule 20 (condition -> expr LESS expr .)
    NOT             reduce using rule 20 (condition -> expr LESS expr .)
    $end            reduce using rule 20 (condition -> expr LESS expr .)
    }               reduce using rule 20 (condition -> expr LESS expr .)
    )               reduce using rule 20 (condition -> expr LESS expr .)
    ,               reduce using rule 20 (condition -> expr LESS expr .)
    ]               reduce using rule 20 (condition -> expr LESS expr .)
    {               reduce using rule 20 (condition -> expr LESS expr .)


state 74

    (21) condition -> expr GREATER expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 21 (condition -> expr GREATER expr .)
    DIVIDE          reduce using rule 21 (condition -> expr GREATER expr .)
    MULTIPLY        reduce using rule 21 (condition -> expr GREATER expr .)
    MINUS           reduce using rule 21 (condition -> expr GREATER expr .)
    PLUS            reduce using rule 21 (condition -> expr GREATER expr .)
    ELESS           reduce using rule 21 (condition -> expr GREATER expr .)
    EGREATER        reduce using rule 21 (condition -> expr GREATER expr .)
    LESS            reduce using rule 21 (condition -> expr GREATER expr .)
    GREATER         reduce using rule 21 (condition -> expr GREATER expr .)
    NOTEQUALS       reduce using rule 21 (condition -> expr GREATER expr .)
    EQUALS          reduce using rule 21 (condition -> expr GREATER expr .)
    XOR             reduce using rule 21 (condition -> expr GREATER expr .)
    OR              reduce using rule 21 (condition -> expr GREATER expr .)
    AND             reduce using rule 21 (condition -> expr GREATER expr .)
    XMINUS          reduce using rule 21 (condition -> expr GREATER expr .)
    XPLUS           reduce using rule 21 (condition -> expr GREATER expr .)
    (               reduce using rule 21 (condition -> expr GREATER expr .)
    [               reduce using rule 21 (condition -> expr GREATER expr .)
    BOOL            reduce using rule 21 (condition -> expr GREATER expr .)
    STRING          reduce using rule 21 (condition -> expr GREATER expr .)
    NUMBER          reduce using rule 21 (condition -> expr GREATER expr .)
    NAME            reduce using rule 21 (condition -> expr GREATER expr .)
    WHILE           reduce using rule 21 (condition -> expr GREATER expr .)
    IF              reduce using rule 21 (condition -> expr GREATER expr .)
    ELSE            reduce using rule 21 (condition -> expr GREATER expr .)
    DISTRIBUTION    reduce using rule 21 (condition -> expr GREATER expr .)
    EVENT           reduce using rule 21 (condition -> expr GREATER expr .)
    SHOW            reduce using rule 21 (condition -> expr GREATER expr .)
    TRAIT           reduce using rule 21 (condition -> expr GREATER expr .)
    NEUTRAL         reduce using rule 21 (condition -> expr GREATER expr .)
    SEA             reduce using rule 21 (condition -> expr GREATER expr .)
    PROVINCE        reduce using rule 21 (condition -> expr GREATER expr .)
    NATION          reduce using rule 21 (condition -> expr GREATER expr .)
    NOT             reduce using rule 21 (condition -> expr GREATER expr .)
    $end            reduce using rule 21 (condition -> expr GREATER expr .)
    }               reduce using rule 21 (condition -> expr GREATER expr .)
    )               reduce using rule 21 (condition -> expr GREATER expr .)
    ,               reduce using rule 21 (condition -> expr GREATER expr .)
    ]               reduce using rule 21 (condition -> expr GREATER expr .)
    {               reduce using rule 21 (condition -> expr GREATER expr .)


state 75

    (22) condition -> expr NOTEQUALS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    DIVIDE          reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    MULTIPLY        reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    MINUS           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    PLUS            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    ELESS           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    EGREATER        reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    LESS            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    GREATER         reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    NOTEQUALS       reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    EQUALS          reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    XOR             reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    OR              reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    AND             reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    XMINUS          reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    XPLUS           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    (               reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    [               reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    BOOL            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    STRING          reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    NUMBER          reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    NAME            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    WHILE           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    IF              reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    ELSE            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    DISTRIBUTION    reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    EVENT           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    SHOW            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    TRAIT           reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    NEUTRAL         reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    SEA             reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    PROVINCE        reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    NATION          reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    NOT             reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    $end            reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    }               reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    )               reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    ,               reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    ]               reduce using rule 22 (condition -> expr NOTEQUALS expr .)
    {               reduce using rule 22 (condition -> expr NOTEQUALS expr .)


state 76

    (23) condition -> expr EQUALS expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 23 (condition -> expr EQUALS expr .)
    DIVIDE          reduce using rule 23 (condition -> expr EQUALS expr .)
    MULTIPLY        reduce using rule 23 (condition -> expr EQUALS expr .)
    MINUS           reduce using rule 23 (condition -> expr EQUALS expr .)
    PLUS            reduce using rule 23 (condition -> expr EQUALS expr .)
    ELESS           reduce using rule 23 (condition -> expr EQUALS expr .)
    EGREATER        reduce using rule 23 (condition -> expr EQUALS expr .)
    LESS            reduce using rule 23 (condition -> expr EQUALS expr .)
    GREATER         reduce using rule 23 (condition -> expr EQUALS expr .)
    NOTEQUALS       reduce using rule 23 (condition -> expr EQUALS expr .)
    EQUALS          reduce using rule 23 (condition -> expr EQUALS expr .)
    XOR             reduce using rule 23 (condition -> expr EQUALS expr .)
    OR              reduce using rule 23 (condition -> expr EQUALS expr .)
    AND             reduce using rule 23 (condition -> expr EQUALS expr .)
    XMINUS          reduce using rule 23 (condition -> expr EQUALS expr .)
    XPLUS           reduce using rule 23 (condition -> expr EQUALS expr .)
    (               reduce using rule 23 (condition -> expr EQUALS expr .)
    [               reduce using rule 23 (condition -> expr EQUALS expr .)
    BOOL            reduce using rule 23 (condition -> expr EQUALS expr .)
    STRING          reduce using rule 23 (condition -> expr EQUALS expr .)
    NUMBER          reduce using rule 23 (condition -> expr EQUALS expr .)
    NAME            reduce using rule 23 (condition -> expr EQUALS expr .)
    WHILE           reduce using rule 23 (condition -> expr EQUALS expr .)
    IF              reduce using rule 23 (condition -> expr EQUALS expr .)
    ELSE            reduce using rule 23 (condition -> expr EQUALS expr .)
    DISTRIBUTION    reduce using rule 23 (condition -> expr EQUALS expr .)
    EVENT           reduce using rule 23 (condition -> expr EQUALS expr .)
    SHOW            reduce using rule 23 (condition -> expr EQUALS expr .)
    TRAIT           reduce using rule 23 (condition -> expr EQUALS expr .)
    NEUTRAL         reduce using rule 23 (condition -> expr EQUALS expr .)
    SEA             reduce using rule 23 (condition -> expr EQUALS expr .)
    PROVINCE        reduce using rule 23 (condition -> expr EQUALS expr .)
    NATION          reduce using rule 23 (condition -> expr EQUALS expr .)
    NOT             reduce using rule 23 (condition -> expr EQUALS expr .)
    $end            reduce using rule 23 (condition -> expr EQUALS expr .)
    }               reduce using rule 23 (condition -> expr EQUALS expr .)
    )               reduce using rule 23 (condition -> expr EQUALS expr .)
    ,               reduce using rule 23 (condition -> expr EQUALS expr .)
    ]               reduce using rule 23 (condition -> expr EQUALS expr .)
    {               reduce using rule 23 (condition -> expr EQUALS expr .)


state 77

    (25) condition -> expr XOR expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 25 (condition -> expr XOR expr .)
    DIVIDE          reduce using rule 25 (condition -> expr XOR expr .)
    MULTIPLY        reduce using rule 25 (condition -> expr XOR expr .)
    MINUS           reduce using rule 25 (condition -> expr XOR expr .)
    PLUS            reduce using rule 25 (condition -> expr XOR expr .)
    XOR             reduce using rule 25 (condition -> expr XOR expr .)
    OR              reduce using rule 25 (condition -> expr XOR expr .)
    AND             reduce using rule 25 (condition -> expr XOR expr .)
    XMINUS          reduce using rule 25 (condition -> expr XOR expr .)
    XPLUS           reduce using rule 25 (condition -> expr XOR expr .)
    (               reduce using rule 25 (condition -> expr XOR expr .)
    [               reduce using rule 25 (condition -> expr XOR expr .)
    BOOL            reduce using rule 25 (condition -> expr XOR expr .)
    STRING          reduce using rule 25 (condition -> expr XOR expr .)
    NUMBER          reduce using rule 25 (condition -> expr XOR expr .)
    NAME            reduce using rule 25 (condition -> expr XOR expr .)
    WHILE           reduce using rule 25 (condition -> expr XOR expr .)
    IF              reduce using rule 25 (condition -> expr XOR expr .)
    ELSE            reduce using rule 25 (condition -> expr XOR expr .)
    DISTRIBUTION    reduce using rule 25 (condition -> expr XOR expr .)
    EVENT           reduce using rule 25 (condition -> expr XOR expr .)
    SHOW            reduce using rule 25 (condition -> expr XOR expr .)
    TRAIT           reduce using rule 25 (condition -> expr XOR expr .)
    NEUTRAL         reduce using rule 25 (condition -> expr XOR expr .)
    SEA             reduce using rule 25 (condition -> expr XOR expr .)
    PROVINCE        reduce using rule 25 (condition -> expr XOR expr .)
    NATION          reduce using rule 25 (condition -> expr XOR expr .)
    NOT             reduce using rule 25 (condition -> expr XOR expr .)
    $end            reduce using rule 25 (condition -> expr XOR expr .)
    }               reduce using rule 25 (condition -> expr XOR expr .)
    )               reduce using rule 25 (condition -> expr XOR expr .)
    ,               reduce using rule 25 (condition -> expr XOR expr .)
    ]               reduce using rule 25 (condition -> expr XOR expr .)
    {               reduce using rule 25 (condition -> expr XOR expr .)
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41


state 78

    (26) condition -> expr OR expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 26 (condition -> expr OR expr .)
    DIVIDE          reduce using rule 26 (condition -> expr OR expr .)
    MULTIPLY        reduce using rule 26 (condition -> expr OR expr .)
    MINUS           reduce using rule 26 (condition -> expr OR expr .)
    PLUS            reduce using rule 26 (condition -> expr OR expr .)
    XOR             reduce using rule 26 (condition -> expr OR expr .)
    OR              reduce using rule 26 (condition -> expr OR expr .)
    AND             reduce using rule 26 (condition -> expr OR expr .)
    XMINUS          reduce using rule 26 (condition -> expr OR expr .)
    XPLUS           reduce using rule 26 (condition -> expr OR expr .)
    (               reduce using rule 26 (condition -> expr OR expr .)
    [               reduce using rule 26 (condition -> expr OR expr .)
    BOOL            reduce using rule 26 (condition -> expr OR expr .)
    STRING          reduce using rule 26 (condition -> expr OR expr .)
    NUMBER          reduce using rule 26 (condition -> expr OR expr .)
    NAME            reduce using rule 26 (condition -> expr OR expr .)
    WHILE           reduce using rule 26 (condition -> expr OR expr .)
    IF              reduce using rule 26 (condition -> expr OR expr .)
    ELSE            reduce using rule 26 (condition -> expr OR expr .)
    DISTRIBUTION    reduce using rule 26 (condition -> expr OR expr .)
    EVENT           reduce using rule 26 (condition -> expr OR expr .)
    SHOW            reduce using rule 26 (condition -> expr OR expr .)
    TRAIT           reduce using rule 26 (condition -> expr OR expr .)
    NEUTRAL         reduce using rule 26 (condition -> expr OR expr .)
    SEA             reduce using rule 26 (condition -> expr OR expr .)
    PROVINCE        reduce using rule 26 (condition -> expr OR expr .)
    NATION          reduce using rule 26 (condition -> expr OR expr .)
    NOT             reduce using rule 26 (condition -> expr OR expr .)
    $end            reduce using rule 26 (condition -> expr OR expr .)
    }               reduce using rule 26 (condition -> expr OR expr .)
    )               reduce using rule 26 (condition -> expr OR expr .)
    ,               reduce using rule 26 (condition -> expr OR expr .)
    ]               reduce using rule 26 (condition -> expr OR expr .)
    {               reduce using rule 26 (condition -> expr OR expr .)
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41


state 79

    (27) condition -> expr AND expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    ARROW           reduce using rule 27 (condition -> expr AND expr .)
    DIVIDE          reduce using rule 27 (condition -> expr AND expr .)
    MULTIPLY        reduce using rule 27 (condition -> expr AND expr .)
    MINUS           reduce using rule 27 (condition -> expr AND expr .)
    PLUS            reduce using rule 27 (condition -> expr AND expr .)
    XOR             reduce using rule 27 (condition -> expr AND expr .)
    OR              reduce using rule 27 (condition -> expr AND expr .)
    AND             reduce using rule 27 (condition -> expr AND expr .)
    XMINUS          reduce using rule 27 (condition -> expr AND expr .)
    XPLUS           reduce using rule 27 (condition -> expr AND expr .)
    (               reduce using rule 27 (condition -> expr AND expr .)
    [               reduce using rule 27 (condition -> expr AND expr .)
    BOOL            reduce using rule 27 (condition -> expr AND expr .)
    STRING          reduce using rule 27 (condition -> expr AND expr .)
    NUMBER          reduce using rule 27 (condition -> expr AND expr .)
    NAME            reduce using rule 27 (condition -> expr AND expr .)
    WHILE           reduce using rule 27 (condition -> expr AND expr .)
    IF              reduce using rule 27 (condition -> expr AND expr .)
    ELSE            reduce using rule 27 (condition -> expr AND expr .)
    DISTRIBUTION    reduce using rule 27 (condition -> expr AND expr .)
    EVENT           reduce using rule 27 (condition -> expr AND expr .)
    SHOW            reduce using rule 27 (condition -> expr AND expr .)
    TRAIT           reduce using rule 27 (condition -> expr AND expr .)
    NEUTRAL         reduce using rule 27 (condition -> expr AND expr .)
    SEA             reduce using rule 27 (condition -> expr AND expr .)
    PROVINCE        reduce using rule 27 (condition -> expr AND expr .)
    NATION          reduce using rule 27 (condition -> expr AND expr .)
    NOT             reduce using rule 27 (condition -> expr AND expr .)
    $end            reduce using rule 27 (condition -> expr AND expr .)
    }               reduce using rule 27 (condition -> expr AND expr .)
    )               reduce using rule 27 (condition -> expr AND expr .)
    ,               reduce using rule 27 (condition -> expr AND expr .)
    ]               reduce using rule 27 (condition -> expr AND expr .)
    {               reduce using rule 27 (condition -> expr AND expr .)
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41


state 80

    (37) expr -> ( expr ) .
    ARROW           reduce using rule 37 (expr -> ( expr ) .)
    DIVIDE          reduce using rule 37 (expr -> ( expr ) .)
    MULTIPLY        reduce using rule 37 (expr -> ( expr ) .)
    MINUS           reduce using rule 37 (expr -> ( expr ) .)
    PLUS            reduce using rule 37 (expr -> ( expr ) .)
    ELESS           reduce using rule 37 (expr -> ( expr ) .)
    EGREATER        reduce using rule 37 (expr -> ( expr ) .)
    LESS            reduce using rule 37 (expr -> ( expr ) .)
    GREATER         reduce using rule 37 (expr -> ( expr ) .)
    NOTEQUALS       reduce using rule 37 (expr -> ( expr ) .)
    EQUALS          reduce using rule 37 (expr -> ( expr ) .)
    XOR             reduce using rule 37 (expr -> ( expr ) .)
    OR              reduce using rule 37 (expr -> ( expr ) .)
    AND             reduce using rule 37 (expr -> ( expr ) .)
    XMINUS          reduce using rule 37 (expr -> ( expr ) .)
    XPLUS           reduce using rule 37 (expr -> ( expr ) .)
    (               reduce using rule 37 (expr -> ( expr ) .)
    [               reduce using rule 37 (expr -> ( expr ) .)
    BOOL            reduce using rule 37 (expr -> ( expr ) .)
    STRING          reduce using rule 37 (expr -> ( expr ) .)
    NUMBER          reduce using rule 37 (expr -> ( expr ) .)
    NAME            reduce using rule 37 (expr -> ( expr ) .)
    WHILE           reduce using rule 37 (expr -> ( expr ) .)
    IF              reduce using rule 37 (expr -> ( expr ) .)
    ELSE            reduce using rule 37 (expr -> ( expr ) .)
    DISTRIBUTION    reduce using rule 37 (expr -> ( expr ) .)
    EVENT           reduce using rule 37 (expr -> ( expr ) .)
    SHOW            reduce using rule 37 (expr -> ( expr ) .)
    TRAIT           reduce using rule 37 (expr -> ( expr ) .)
    NEUTRAL         reduce using rule 37 (expr -> ( expr ) .)
    SEA             reduce using rule 37 (expr -> ( expr ) .)
    PROVINCE        reduce using rule 37 (expr -> ( expr ) .)
    NATION          reduce using rule 37 (expr -> ( expr ) .)
    NOT             reduce using rule 37 (expr -> ( expr ) .)
    $end            reduce using rule 37 (expr -> ( expr ) .)
    }               reduce using rule 37 (expr -> ( expr ) .)
    )               reduce using rule 37 (expr -> ( expr ) .)
    ,               reduce using rule 37 (expr -> ( expr ) .)
    ]               reduce using rule 37 (expr -> ( expr ) .)
    {               reduce using rule 37 (expr -> ( expr ) .)


state 81

    (39) expr -> [ list_expr ] .
    ARROW           reduce using rule 39 (expr -> [ list_expr ] .)
    DIVIDE          reduce using rule 39 (expr -> [ list_expr ] .)
    MULTIPLY        reduce using rule 39 (expr -> [ list_expr ] .)
    MINUS           reduce using rule 39 (expr -> [ list_expr ] .)
    PLUS            reduce using rule 39 (expr -> [ list_expr ] .)
    ELESS           reduce using rule 39 (expr -> [ list_expr ] .)
    EGREATER        reduce using rule 39 (expr -> [ list_expr ] .)
    LESS            reduce using rule 39 (expr -> [ list_expr ] .)
    GREATER         reduce using rule 39 (expr -> [ list_expr ] .)
    NOTEQUALS       reduce using rule 39 (expr -> [ list_expr ] .)
    EQUALS          reduce using rule 39 (expr -> [ list_expr ] .)
    XOR             reduce using rule 39 (expr -> [ list_expr ] .)
    OR              reduce using rule 39 (expr -> [ list_expr ] .)
    AND             reduce using rule 39 (expr -> [ list_expr ] .)
    XMINUS          reduce using rule 39 (expr -> [ list_expr ] .)
    XPLUS           reduce using rule 39 (expr -> [ list_expr ] .)
    (               reduce using rule 39 (expr -> [ list_expr ] .)
    [               reduce using rule 39 (expr -> [ list_expr ] .)
    BOOL            reduce using rule 39 (expr -> [ list_expr ] .)
    STRING          reduce using rule 39 (expr -> [ list_expr ] .)
    NUMBER          reduce using rule 39 (expr -> [ list_expr ] .)
    NAME            reduce using rule 39 (expr -> [ list_expr ] .)
    WHILE           reduce using rule 39 (expr -> [ list_expr ] .)
    IF              reduce using rule 39 (expr -> [ list_expr ] .)
    ELSE            reduce using rule 39 (expr -> [ list_expr ] .)
    DISTRIBUTION    reduce using rule 39 (expr -> [ list_expr ] .)
    EVENT           reduce using rule 39 (expr -> [ list_expr ] .)
    SHOW            reduce using rule 39 (expr -> [ list_expr ] .)
    TRAIT           reduce using rule 39 (expr -> [ list_expr ] .)
    NEUTRAL         reduce using rule 39 (expr -> [ list_expr ] .)
    SEA             reduce using rule 39 (expr -> [ list_expr ] .)
    PROVINCE        reduce using rule 39 (expr -> [ list_expr ] .)
    NATION          reduce using rule 39 (expr -> [ list_expr ] .)
    NOT             reduce using rule 39 (expr -> [ list_expr ] .)
    $end            reduce using rule 39 (expr -> [ list_expr ] .)
    }               reduce using rule 39 (expr -> [ list_expr ] .)
    )               reduce using rule 39 (expr -> [ list_expr ] .)
    ,               reduce using rule 39 (expr -> [ list_expr ] .)
    ]               reduce using rule 39 (expr -> [ list_expr ] .)
    {               reduce using rule 39 (expr -> [ list_expr ] .)


state 82

    (46) list_expr -> expr , . list_expr
    (44) list_expr -> . expr
    (45) list_expr -> .
    (46) list_expr -> . expr , list_expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    ]               reduce using rule 45 (list_expr -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 52
    list_expr                      shift and go to state 99
    condition                      shift and go to state 12

state 83

    (12) var -> NAME ASSIGN expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    XMINUS          reduce using rule 12 (var -> NAME ASSIGN expr .)
    XPLUS           reduce using rule 12 (var -> NAME ASSIGN expr .)
    (               reduce using rule 12 (var -> NAME ASSIGN expr .)
    [               reduce using rule 12 (var -> NAME ASSIGN expr .)
    BOOL            reduce using rule 12 (var -> NAME ASSIGN expr .)
    STRING          reduce using rule 12 (var -> NAME ASSIGN expr .)
    NUMBER          reduce using rule 12 (var -> NAME ASSIGN expr .)
    NAME            reduce using rule 12 (var -> NAME ASSIGN expr .)
    WHILE           reduce using rule 12 (var -> NAME ASSIGN expr .)
    IF              reduce using rule 12 (var -> NAME ASSIGN expr .)
    ELSE            reduce using rule 12 (var -> NAME ASSIGN expr .)
    DISTRIBUTION    reduce using rule 12 (var -> NAME ASSIGN expr .)
    EVENT           reduce using rule 12 (var -> NAME ASSIGN expr .)
    SHOW            reduce using rule 12 (var -> NAME ASSIGN expr .)
    TRAIT           reduce using rule 12 (var -> NAME ASSIGN expr .)
    NEUTRAL         reduce using rule 12 (var -> NAME ASSIGN expr .)
    SEA             reduce using rule 12 (var -> NAME ASSIGN expr .)
    PROVINCE        reduce using rule 12 (var -> NAME ASSIGN expr .)
    NATION          reduce using rule 12 (var -> NAME ASSIGN expr .)
    NOT             reduce using rule 12 (var -> NAME ASSIGN expr .)
    $end            reduce using rule 12 (var -> NAME ASSIGN expr .)
    }               reduce using rule 12 (var -> NAME ASSIGN expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 84

    (47) function -> WHILE ( condition . ) { script }
    (38) expr -> condition .
    )               shift and go to state 100
    ELESS           reduce using rule 38 (expr -> condition .)
    EGREATER        reduce using rule 38 (expr -> condition .)
    LESS            reduce using rule 38 (expr -> condition .)
    GREATER         reduce using rule 38 (expr -> condition .)
    NOTEQUALS       reduce using rule 38 (expr -> condition .)
    EQUALS          reduce using rule 38 (expr -> condition .)
    XOR             reduce using rule 38 (expr -> condition .)
    OR              reduce using rule 38 (expr -> condition .)
    AND             reduce using rule 38 (expr -> condition .)
    ARROW           reduce using rule 38 (expr -> condition .)
    DIVIDE          reduce using rule 38 (expr -> condition .)
    MULTIPLY        reduce using rule 38 (expr -> condition .)
    MINUS           reduce using rule 38 (expr -> condition .)
    PLUS            reduce using rule 38 (expr -> condition .)


state 85

    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35


state 86

    (48) function -> IF ( condition . ) { script }
    (38) expr -> condition .
    )               shift and go to state 101
    ELESS           reduce using rule 38 (expr -> condition .)
    EGREATER        reduce using rule 38 (expr -> condition .)
    LESS            reduce using rule 38 (expr -> condition .)
    GREATER         reduce using rule 38 (expr -> condition .)
    NOTEQUALS       reduce using rule 38 (expr -> condition .)
    EQUALS          reduce using rule 38 (expr -> condition .)
    XOR             reduce using rule 38 (expr -> condition .)
    OR              reduce using rule 38 (expr -> condition .)
    AND             reduce using rule 38 (expr -> condition .)
    ARROW           reduce using rule 38 (expr -> condition .)
    DIVIDE          reduce using rule 38 (expr -> condition .)
    MULTIPLY        reduce using rule 38 (expr -> condition .)
    MINUS           reduce using rule 38 (expr -> condition .)
    PLUS            reduce using rule 38 (expr -> condition .)


state 87

    (49) function -> ELSE { script . }
    }               shift and go to state 102


state 88

    (17) param -> NAME . PARAMASSIGN expr
    PARAMASSIGN     shift and go to state 103


state 89

    (50) function -> DISTRIBUTION NAME params . { script }
    {               shift and go to state 104


state 90

    (14) params -> param .
    (15) params -> param . , params
    {               reduce using rule 14 (params -> param .)
    MINUS           reduce using rule 14 (params -> param .)
    PLUS            reduce using rule 14 (params -> param .)
    XMINUS          reduce using rule 14 (params -> param .)
    XPLUS           reduce using rule 14 (params -> param .)
    (               reduce using rule 14 (params -> param .)
    [               reduce using rule 14 (params -> param .)
    BOOL            reduce using rule 14 (params -> param .)
    STRING          reduce using rule 14 (params -> param .)
    NUMBER          reduce using rule 14 (params -> param .)
    NAME            reduce using rule 14 (params -> param .)
    WHILE           reduce using rule 14 (params -> param .)
    IF              reduce using rule 14 (params -> param .)
    ELSE            reduce using rule 14 (params -> param .)
    DISTRIBUTION    reduce using rule 14 (params -> param .)
    EVENT           reduce using rule 14 (params -> param .)
    SHOW            reduce using rule 14 (params -> param .)
    TRAIT           reduce using rule 14 (params -> param .)
    NEUTRAL         reduce using rule 14 (params -> param .)
    SEA             reduce using rule 14 (params -> param .)
    PROVINCE        reduce using rule 14 (params -> param .)
    NATION          reduce using rule 14 (params -> param .)
    NOT             reduce using rule 14 (params -> param .)
    $end            reduce using rule 14 (params -> param .)
    }               reduce using rule 14 (params -> param .)
    )               reduce using rule 14 (params -> param .)
    ,               shift and go to state 105


state 91

    (16) params -> ( . params )
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
    )               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    params                         shift and go to state 106
    param                          shift and go to state 90

state 92

    (51) function -> EVENT NAME params . { script }
    {               shift and go to state 107


state 93

    (52) function -> SHOW ( expr . )
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
    )               shift and go to state 108
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 94

    (7) element -> TRAIT NAME params .
    MINUS           reduce using rule 7 (element -> TRAIT NAME params .)
    PLUS            reduce using rule 7 (element -> TRAIT NAME params .)
    XMINUS          reduce using rule 7 (element -> TRAIT NAME params .)
    XPLUS           reduce using rule 7 (element -> TRAIT NAME params .)
    (               reduce using rule 7 (element -> TRAIT NAME params .)
    [               reduce using rule 7 (element -> TRAIT NAME params .)
    BOOL            reduce using rule 7 (element -> TRAIT NAME params .)
    STRING          reduce using rule 7 (element -> TRAIT NAME params .)
    NUMBER          reduce using rule 7 (element -> TRAIT NAME params .)
    NAME            reduce using rule 7 (element -> TRAIT NAME params .)
    WHILE           reduce using rule 7 (element -> TRAIT NAME params .)
    IF              reduce using rule 7 (element -> TRAIT NAME params .)
    ELSE            reduce using rule 7 (element -> TRAIT NAME params .)
    DISTRIBUTION    reduce using rule 7 (element -> TRAIT NAME params .)
    EVENT           reduce using rule 7 (element -> TRAIT NAME params .)
    SHOW            reduce using rule 7 (element -> TRAIT NAME params .)
    TRAIT           reduce using rule 7 (element -> TRAIT NAME params .)
    NEUTRAL         reduce using rule 7 (element -> TRAIT NAME params .)
    SEA             reduce using rule 7 (element -> TRAIT NAME params .)
    PROVINCE        reduce using rule 7 (element -> TRAIT NAME params .)
    NATION          reduce using rule 7 (element -> TRAIT NAME params .)
    NOT             reduce using rule 7 (element -> TRAIT NAME params .)
    $end            reduce using rule 7 (element -> TRAIT NAME params .)
    }               reduce using rule 7 (element -> TRAIT NAME params .)


state 95

    (8) element -> NEUTRAL NAME params .
    MINUS           reduce using rule 8 (element -> NEUTRAL NAME params .)
    PLUS            reduce using rule 8 (element -> NEUTRAL NAME params .)
    XMINUS          reduce using rule 8 (element -> NEUTRAL NAME params .)
    XPLUS           reduce using rule 8 (element -> NEUTRAL NAME params .)
    (               reduce using rule 8 (element -> NEUTRAL NAME params .)
    [               reduce using rule 8 (element -> NEUTRAL NAME params .)
    BOOL            reduce using rule 8 (element -> NEUTRAL NAME params .)
    STRING          reduce using rule 8 (element -> NEUTRAL NAME params .)
    NUMBER          reduce using rule 8 (element -> NEUTRAL NAME params .)
    NAME            reduce using rule 8 (element -> NEUTRAL NAME params .)
    WHILE           reduce using rule 8 (element -> NEUTRAL NAME params .)
    IF              reduce using rule 8 (element -> NEUTRAL NAME params .)
    ELSE            reduce using rule 8 (element -> NEUTRAL NAME params .)
    DISTRIBUTION    reduce using rule 8 (element -> NEUTRAL NAME params .)
    EVENT           reduce using rule 8 (element -> NEUTRAL NAME params .)
    SHOW            reduce using rule 8 (element -> NEUTRAL NAME params .)
    TRAIT           reduce using rule 8 (element -> NEUTRAL NAME params .)
    NEUTRAL         reduce using rule 8 (element -> NEUTRAL NAME params .)
    SEA             reduce using rule 8 (element -> NEUTRAL NAME params .)
    PROVINCE        reduce using rule 8 (element -> NEUTRAL NAME params .)
    NATION          reduce using rule 8 (element -> NEUTRAL NAME params .)
    NOT             reduce using rule 8 (element -> NEUTRAL NAME params .)
    $end            reduce using rule 8 (element -> NEUTRAL NAME params .)
    }               reduce using rule 8 (element -> NEUTRAL NAME params .)


state 96

    (9) element -> SEA NAME params .
    MINUS           reduce using rule 9 (element -> SEA NAME params .)
    PLUS            reduce using rule 9 (element -> SEA NAME params .)
    XMINUS          reduce using rule 9 (element -> SEA NAME params .)
    XPLUS           reduce using rule 9 (element -> SEA NAME params .)
    (               reduce using rule 9 (element -> SEA NAME params .)
    [               reduce using rule 9 (element -> SEA NAME params .)
    BOOL            reduce using rule 9 (element -> SEA NAME params .)
    STRING          reduce using rule 9 (element -> SEA NAME params .)
    NUMBER          reduce using rule 9 (element -> SEA NAME params .)
    NAME            reduce using rule 9 (element -> SEA NAME params .)
    WHILE           reduce using rule 9 (element -> SEA NAME params .)
    IF              reduce using rule 9 (element -> SEA NAME params .)
    ELSE            reduce using rule 9 (element -> SEA NAME params .)
    DISTRIBUTION    reduce using rule 9 (element -> SEA NAME params .)
    EVENT           reduce using rule 9 (element -> SEA NAME params .)
    SHOW            reduce using rule 9 (element -> SEA NAME params .)
    TRAIT           reduce using rule 9 (element -> SEA NAME params .)
    NEUTRAL         reduce using rule 9 (element -> SEA NAME params .)
    SEA             reduce using rule 9 (element -> SEA NAME params .)
    PROVINCE        reduce using rule 9 (element -> SEA NAME params .)
    NATION          reduce using rule 9 (element -> SEA NAME params .)
    NOT             reduce using rule 9 (element -> SEA NAME params .)
    $end            reduce using rule 9 (element -> SEA NAME params .)
    }               reduce using rule 9 (element -> SEA NAME params .)


state 97

    (10) element -> PROVINCE NAME params .
    MINUS           reduce using rule 10 (element -> PROVINCE NAME params .)
    PLUS            reduce using rule 10 (element -> PROVINCE NAME params .)
    XMINUS          reduce using rule 10 (element -> PROVINCE NAME params .)
    XPLUS           reduce using rule 10 (element -> PROVINCE NAME params .)
    (               reduce using rule 10 (element -> PROVINCE NAME params .)
    [               reduce using rule 10 (element -> PROVINCE NAME params .)
    BOOL            reduce using rule 10 (element -> PROVINCE NAME params .)
    STRING          reduce using rule 10 (element -> PROVINCE NAME params .)
    NUMBER          reduce using rule 10 (element -> PROVINCE NAME params .)
    NAME            reduce using rule 10 (element -> PROVINCE NAME params .)
    WHILE           reduce using rule 10 (element -> PROVINCE NAME params .)
    IF              reduce using rule 10 (element -> PROVINCE NAME params .)
    ELSE            reduce using rule 10 (element -> PROVINCE NAME params .)
    DISTRIBUTION    reduce using rule 10 (element -> PROVINCE NAME params .)
    EVENT           reduce using rule 10 (element -> PROVINCE NAME params .)
    SHOW            reduce using rule 10 (element -> PROVINCE NAME params .)
    TRAIT           reduce using rule 10 (element -> PROVINCE NAME params .)
    NEUTRAL         reduce using rule 10 (element -> PROVINCE NAME params .)
    SEA             reduce using rule 10 (element -> PROVINCE NAME params .)
    PROVINCE        reduce using rule 10 (element -> PROVINCE NAME params .)
    NATION          reduce using rule 10 (element -> PROVINCE NAME params .)
    NOT             reduce using rule 10 (element -> PROVINCE NAME params .)
    $end            reduce using rule 10 (element -> PROVINCE NAME params .)
    }               reduce using rule 10 (element -> PROVINCE NAME params .)


state 98

    (11) element -> NATION NAME params .
    MINUS           reduce using rule 11 (element -> NATION NAME params .)
    PLUS            reduce using rule 11 (element -> NATION NAME params .)
    XMINUS          reduce using rule 11 (element -> NATION NAME params .)
    XPLUS           reduce using rule 11 (element -> NATION NAME params .)
    (               reduce using rule 11 (element -> NATION NAME params .)
    [               reduce using rule 11 (element -> NATION NAME params .)
    BOOL            reduce using rule 11 (element -> NATION NAME params .)
    STRING          reduce using rule 11 (element -> NATION NAME params .)
    NUMBER          reduce using rule 11 (element -> NATION NAME params .)
    NAME            reduce using rule 11 (element -> NATION NAME params .)
    WHILE           reduce using rule 11 (element -> NATION NAME params .)
    IF              reduce using rule 11 (element -> NATION NAME params .)
    ELSE            reduce using rule 11 (element -> NATION NAME params .)
    DISTRIBUTION    reduce using rule 11 (element -> NATION NAME params .)
    EVENT           reduce using rule 11 (element -> NATION NAME params .)
    SHOW            reduce using rule 11 (element -> NATION NAME params .)
    TRAIT           reduce using rule 11 (element -> NATION NAME params .)
    NEUTRAL         reduce using rule 11 (element -> NATION NAME params .)
    SEA             reduce using rule 11 (element -> NATION NAME params .)
    PROVINCE        reduce using rule 11 (element -> NATION NAME params .)
    NATION          reduce using rule 11 (element -> NATION NAME params .)
    NOT             reduce using rule 11 (element -> NATION NAME params .)
    $end            reduce using rule 11 (element -> NATION NAME params .)
    }               reduce using rule 11 (element -> NATION NAME params .)


state 99

    (46) list_expr -> expr , list_expr .
    ]               reduce using rule 46 (list_expr -> expr , list_expr .)


state 100

    (47) function -> WHILE ( condition ) . { script }
    {               shift and go to state 109


state 101

    (48) function -> IF ( condition ) . { script }
    {               shift and go to state 110


state 102

    (49) function -> ELSE { script } .
    MINUS           reduce using rule 49 (function -> ELSE { script } .)
    PLUS            reduce using rule 49 (function -> ELSE { script } .)
    XMINUS          reduce using rule 49 (function -> ELSE { script } .)
    XPLUS           reduce using rule 49 (function -> ELSE { script } .)
    (               reduce using rule 49 (function -> ELSE { script } .)
    [               reduce using rule 49 (function -> ELSE { script } .)
    BOOL            reduce using rule 49 (function -> ELSE { script } .)
    STRING          reduce using rule 49 (function -> ELSE { script } .)
    NUMBER          reduce using rule 49 (function -> ELSE { script } .)
    NAME            reduce using rule 49 (function -> ELSE { script } .)
    WHILE           reduce using rule 49 (function -> ELSE { script } .)
    IF              reduce using rule 49 (function -> ELSE { script } .)
    ELSE            reduce using rule 49 (function -> ELSE { script } .)
    DISTRIBUTION    reduce using rule 49 (function -> ELSE { script } .)
    EVENT           reduce using rule 49 (function -> ELSE { script } .)
    SHOW            reduce using rule 49 (function -> ELSE { script } .)
    TRAIT           reduce using rule 49 (function -> ELSE { script } .)
    NEUTRAL         reduce using rule 49 (function -> ELSE { script } .)
    SEA             reduce using rule 49 (function -> ELSE { script } .)
    PROVINCE        reduce using rule 49 (function -> ELSE { script } .)
    NATION          reduce using rule 49 (function -> ELSE { script } .)
    NOT             reduce using rule 49 (function -> ELSE { script } .)
    $end            reduce using rule 49 (function -> ELSE { script } .)
    }               reduce using rule 49 (function -> ELSE { script } .)


state 103

    (17) param -> NAME PARAMASSIGN . expr
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 46
    NOT             shift and go to state 29

    expr                           shift and go to state 111
    condition                      shift and go to state 12

state 104

    (50) function -> DISTRIBUTION NAME params { . script }
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    }               reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    script                         shift and go to state 112
    code                           shift and go to state 2
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6
    condition                      shift and go to state 12

state 105

    (15) params -> param , . params
    (13) params -> .
    (14) params -> . param
    (15) params -> . param , params
    (16) params -> . ( params )
    (17) param -> . NAME PARAMASSIGN expr
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    {               reduce using rule 13 (params -> .)
    MINUS           reduce using rule 13 (params -> .)
    PLUS            reduce using rule 13 (params -> .)
    XMINUS          reduce using rule 13 (params -> .)
    XPLUS           reduce using rule 13 (params -> .)
    [               reduce using rule 13 (params -> .)
    BOOL            reduce using rule 13 (params -> .)
    STRING          reduce using rule 13 (params -> .)
    NUMBER          reduce using rule 13 (params -> .)
    WHILE           reduce using rule 13 (params -> .)
    IF              reduce using rule 13 (params -> .)
    ELSE            reduce using rule 13 (params -> .)
    DISTRIBUTION    reduce using rule 13 (params -> .)
    EVENT           reduce using rule 13 (params -> .)
    SHOW            reduce using rule 13 (params -> .)
    TRAIT           reduce using rule 13 (params -> .)
    NEUTRAL         reduce using rule 13 (params -> .)
    SEA             reduce using rule 13 (params -> .)
    PROVINCE        reduce using rule 13 (params -> .)
    NATION          reduce using rule 13 (params -> .)
    NOT             reduce using rule 13 (params -> .)
    $end            reduce using rule 13 (params -> .)
    }               reduce using rule 13 (params -> .)
    )               reduce using rule 13 (params -> .)
    (               shift and go to state 91
    NAME            shift and go to state 88

    param                          shift and go to state 90
    params                         shift and go to state 113

state 106

    (16) params -> ( params . )
    )               shift and go to state 114


state 107

    (51) function -> EVENT NAME params { . script }
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    }               reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    script                         shift and go to state 115
    code                           shift and go to state 2
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6
    condition                      shift and go to state 12

state 108

    (52) function -> SHOW ( expr ) .
    MINUS           reduce using rule 52 (function -> SHOW ( expr ) .)
    PLUS            reduce using rule 52 (function -> SHOW ( expr ) .)
    XMINUS          reduce using rule 52 (function -> SHOW ( expr ) .)
    XPLUS           reduce using rule 52 (function -> SHOW ( expr ) .)
    (               reduce using rule 52 (function -> SHOW ( expr ) .)
    [               reduce using rule 52 (function -> SHOW ( expr ) .)
    BOOL            reduce using rule 52 (function -> SHOW ( expr ) .)
    STRING          reduce using rule 52 (function -> SHOW ( expr ) .)
    NUMBER          reduce using rule 52 (function -> SHOW ( expr ) .)
    NAME            reduce using rule 52 (function -> SHOW ( expr ) .)
    WHILE           reduce using rule 52 (function -> SHOW ( expr ) .)
    IF              reduce using rule 52 (function -> SHOW ( expr ) .)
    ELSE            reduce using rule 52 (function -> SHOW ( expr ) .)
    DISTRIBUTION    reduce using rule 52 (function -> SHOW ( expr ) .)
    EVENT           reduce using rule 52 (function -> SHOW ( expr ) .)
    SHOW            reduce using rule 52 (function -> SHOW ( expr ) .)
    TRAIT           reduce using rule 52 (function -> SHOW ( expr ) .)
    NEUTRAL         reduce using rule 52 (function -> SHOW ( expr ) .)
    SEA             reduce using rule 52 (function -> SHOW ( expr ) .)
    PROVINCE        reduce using rule 52 (function -> SHOW ( expr ) .)
    NATION          reduce using rule 52 (function -> SHOW ( expr ) .)
    NOT             reduce using rule 52 (function -> SHOW ( expr ) .)
    $end            reduce using rule 52 (function -> SHOW ( expr ) .)
    }               reduce using rule 52 (function -> SHOW ( expr ) .)


state 109

    (47) function -> WHILE ( condition ) { . script }
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    }               reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    condition                      shift and go to state 12
    script                         shift and go to state 116
    code                           shift and go to state 2
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6

state 110

    (48) function -> IF ( condition ) { . script }
    (1) script -> .
    (2) script -> . code script
    (3) code -> . expr
    (4) code -> . var
    (5) code -> . function
    (6) code -> . element
    (28) expr -> . expr ARROW expr
    (29) expr -> . MINUS expr
    (30) expr -> . PLUS expr
    (31) expr -> . XMINUS expr
    (32) expr -> . XPLUS expr
    (33) expr -> . expr DIVIDE expr
    (34) expr -> . expr MULTIPLY expr
    (35) expr -> . expr MINUS expr
    (36) expr -> . expr PLUS expr
    (37) expr -> . ( expr )
    (38) expr -> . condition
    (39) expr -> . [ list_expr ]
    (40) expr -> . BOOL
    (41) expr -> . STRING
    (42) expr -> . NUMBER
    (43) expr -> . NAME
    (12) var -> . NAME ASSIGN expr
    (47) function -> . WHILE ( condition ) { script }
    (48) function -> . IF ( condition ) { script }
    (49) function -> . ELSE { script }
    (50) function -> . DISTRIBUTION NAME params { script }
    (51) function -> . EVENT NAME params { script }
    (52) function -> . SHOW ( expr )
    (7) element -> . TRAIT NAME params
    (8) element -> . NEUTRAL NAME params
    (9) element -> . SEA NAME params
    (10) element -> . PROVINCE NAME params
    (11) element -> . NATION NAME params
    (18) condition -> . expr ELESS expr
    (19) condition -> . expr EGREATER expr
    (20) condition -> . expr LESS expr
    (21) condition -> . expr GREATER expr
    (22) condition -> . expr NOTEQUALS expr
    (23) condition -> . expr EQUALS expr
    (24) condition -> . NOT expr
    (25) condition -> . expr XOR expr
    (26) condition -> . expr OR expr
    (27) condition -> . expr AND expr
    }               reduce using rule 1 (script -> .)
    MINUS           shift and go to state 7
    PLUS            shift and go to state 8
    XMINUS          shift and go to state 9
    XPLUS           shift and go to state 10
    (               shift and go to state 11
    [               shift and go to state 13
    BOOL            shift and go to state 14
    STRING          shift and go to state 15
    NUMBER          shift and go to state 16
    NAME            shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    ELSE            shift and go to state 20
    DISTRIBUTION    shift and go to state 21
    EVENT           shift and go to state 22
    SHOW            shift and go to state 23
    TRAIT           shift and go to state 24
    NEUTRAL         shift and go to state 25
    SEA             shift and go to state 26
    PROVINCE        shift and go to state 27
    NATION          shift and go to state 28
    NOT             shift and go to state 29

    condition                      shift and go to state 12
    script                         shift and go to state 117
    code                           shift and go to state 2
    expr                           shift and go to state 3
    var                            shift and go to state 4
    function                       shift and go to state 5
    element                        shift and go to state 6

state 111

    (17) param -> NAME PARAMASSIGN expr .
    (28) expr -> expr . ARROW expr
    (33) expr -> expr . DIVIDE expr
    (34) expr -> expr . MULTIPLY expr
    (35) expr -> expr . MINUS expr
    (36) expr -> expr . PLUS expr
    (18) condition -> expr . ELESS expr
    (19) condition -> expr . EGREATER expr
    (20) condition -> expr . LESS expr
    (21) condition -> expr . GREATER expr
    (22) condition -> expr . NOTEQUALS expr
    (23) condition -> expr . EQUALS expr
    (25) condition -> expr . XOR expr
    (26) condition -> expr . OR expr
    (27) condition -> expr . AND expr
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ,               reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    {               reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    XMINUS          reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    XPLUS           reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    (               reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    [               reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    BOOL            reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    STRING          reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    NUMBER          reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    NAME            reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    WHILE           reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    IF              reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    ELSE            reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    DISTRIBUTION    reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    EVENT           reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    SHOW            reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    TRAIT           reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    NEUTRAL         reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    SEA             reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    PROVINCE        reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    NATION          reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    NOT             reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    $end            reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    }               reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    )               reduce using rule 17 (param -> NAME PARAMASSIGN expr .)
    ARROW           shift and go to state 31
    DIVIDE          shift and go to state 32
    MULTIPLY        shift and go to state 33
    MINUS           shift and go to state 34
    PLUS            shift and go to state 35
    ELESS           shift and go to state 36
    EGREATER        shift and go to state 37
    LESS            shift and go to state 38
    GREATER         shift and go to state 39
    NOTEQUALS       shift and go to state 40
    EQUALS          shift and go to state 41
    XOR             shift and go to state 42
    OR              shift and go to state 43
    AND             shift and go to state 44


state 112

    (50) function -> DISTRIBUTION NAME params { script . }
    }               shift and go to state 118


state 113

    (15) params -> param , params .
    {               reduce using rule 15 (params -> param , params .)
    MINUS           reduce using rule 15 (params -> param , params .)
    PLUS            reduce using rule 15 (params -> param , params .)
    XMINUS          reduce using rule 15 (params -> param , params .)
    XPLUS           reduce using rule 15 (params -> param , params .)
    (               reduce using rule 15 (params -> param , params .)
    [               reduce using rule 15 (params -> param , params .)
    BOOL            reduce using rule 15 (params -> param , params .)
    STRING          reduce using rule 15 (params -> param , params .)
    NUMBER          reduce using rule 15 (params -> param , params .)
    NAME            reduce using rule 15 (params -> param , params .)
    WHILE           reduce using rule 15 (params -> param , params .)
    IF              reduce using rule 15 (params -> param , params .)
    ELSE            reduce using rule 15 (params -> param , params .)
    DISTRIBUTION    reduce using rule 15 (params -> param , params .)
    EVENT           reduce using rule 15 (params -> param , params .)
    SHOW            reduce using rule 15 (params -> param , params .)
    TRAIT           reduce using rule 15 (params -> param , params .)
    NEUTRAL         reduce using rule 15 (params -> param , params .)
    SEA             reduce using rule 15 (params -> param , params .)
    PROVINCE        reduce using rule 15 (params -> param , params .)
    NATION          reduce using rule 15 (params -> param , params .)
    NOT             reduce using rule 15 (params -> param , params .)
    $end            reduce using rule 15 (params -> param , params .)
    }               reduce using rule 15 (params -> param , params .)
    )               reduce using rule 15 (params -> param , params .)


state 114

    (16) params -> ( params ) .
    {               reduce using rule 16 (params -> ( params ) .)
    MINUS           reduce using rule 16 (params -> ( params ) .)
    PLUS            reduce using rule 16 (params -> ( params ) .)
    XMINUS          reduce using rule 16 (params -> ( params ) .)
    XPLUS           reduce using rule 16 (params -> ( params ) .)
    (               reduce using rule 16 (params -> ( params ) .)
    [               reduce using rule 16 (params -> ( params ) .)
    BOOL            reduce using rule 16 (params -> ( params ) .)
    STRING          reduce using rule 16 (params -> ( params ) .)
    NUMBER          reduce using rule 16 (params -> ( params ) .)
    NAME            reduce using rule 16 (params -> ( params ) .)
    WHILE           reduce using rule 16 (params -> ( params ) .)
    IF              reduce using rule 16 (params -> ( params ) .)
    ELSE            reduce using rule 16 (params -> ( params ) .)
    DISTRIBUTION    reduce using rule 16 (params -> ( params ) .)
    EVENT           reduce using rule 16 (params -> ( params ) .)
    SHOW            reduce using rule 16 (params -> ( params ) .)
    TRAIT           reduce using rule 16 (params -> ( params ) .)
    NEUTRAL         reduce using rule 16 (params -> ( params ) .)
    SEA             reduce using rule 16 (params -> ( params ) .)
    PROVINCE        reduce using rule 16 (params -> ( params ) .)
    NATION          reduce using rule 16 (params -> ( params ) .)
    NOT             reduce using rule 16 (params -> ( params ) .)
    $end            reduce using rule 16 (params -> ( params ) .)
    }               reduce using rule 16 (params -> ( params ) .)
    )               reduce using rule 16 (params -> ( params ) .)


state 115

    (51) function -> EVENT NAME params { script . }
    }               shift and go to state 119


state 116

    (47) function -> WHILE ( condition ) { script . }
    }               shift and go to state 120


state 117

    (48) function -> IF ( condition ) { script . }
    }               shift and go to state 121


state 118

    (50) function -> DISTRIBUTION NAME params { script } .
    MINUS           reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    PLUS            reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    XMINUS          reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    XPLUS           reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    (               reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    [               reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    BOOL            reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    STRING          reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    NUMBER          reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    NAME            reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    WHILE           reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    IF              reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    ELSE            reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    DISTRIBUTION    reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    EVENT           reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    SHOW            reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    TRAIT           reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    NEUTRAL         reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    SEA             reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    PROVINCE        reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    NATION          reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    NOT             reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    $end            reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)
    }               reduce using rule 50 (function -> DISTRIBUTION NAME params { script } .)


state 119

    (51) function -> EVENT NAME params { script } .
    MINUS           reduce using rule 51 (function -> EVENT NAME params { script } .)
    PLUS            reduce using rule 51 (function -> EVENT NAME params { script } .)
    XMINUS          reduce using rule 51 (function -> EVENT NAME params { script } .)
    XPLUS           reduce using rule 51 (function -> EVENT NAME params { script } .)
    (               reduce using rule 51 (function -> EVENT NAME params { script } .)
    [               reduce using rule 51 (function -> EVENT NAME params { script } .)
    BOOL            reduce using rule 51 (function -> EVENT NAME params { script } .)
    STRING          reduce using rule 51 (function -> EVENT NAME params { script } .)
    NUMBER          reduce using rule 51 (function -> EVENT NAME params { script } .)
    NAME            reduce using rule 51 (function -> EVENT NAME params { script } .)
    WHILE           reduce using rule 51 (function -> EVENT NAME params { script } .)
    IF              reduce using rule 51 (function -> EVENT NAME params { script } .)
    ELSE            reduce using rule 51 (function -> EVENT NAME params { script } .)
    DISTRIBUTION    reduce using rule 51 (function -> EVENT NAME params { script } .)
    EVENT           reduce using rule 51 (function -> EVENT NAME params { script } .)
    SHOW            reduce using rule 51 (function -> EVENT NAME params { script } .)
    TRAIT           reduce using rule 51 (function -> EVENT NAME params { script } .)
    NEUTRAL         reduce using rule 51 (function -> EVENT NAME params { script } .)
    SEA             reduce using rule 51 (function -> EVENT NAME params { script } .)
    PROVINCE        reduce using rule 51 (function -> EVENT NAME params { script } .)
    NATION          reduce using rule 51 (function -> EVENT NAME params { script } .)
    NOT             reduce using rule 51 (function -> EVENT NAME params { script } .)
    $end            reduce using rule 51 (function -> EVENT NAME params { script } .)
    }               reduce using rule 51 (function -> EVENT NAME params { script } .)


state 120

    (47) function -> WHILE ( condition ) { script } .
    MINUS           reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    PLUS            reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    XMINUS          reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    XPLUS           reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    (               reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    [               reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    BOOL            reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    STRING          reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    NUMBER          reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    NAME            reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    WHILE           reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    IF              reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    ELSE            reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    DISTRIBUTION    reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    EVENT           reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    SHOW            reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    TRAIT           reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    NEUTRAL         reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    SEA             reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    PROVINCE        reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    NATION          reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    NOT             reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    $end            reduce using rule 47 (function -> WHILE ( condition ) { script } .)
    }               reduce using rule 47 (function -> WHILE ( condition ) { script } .)


state 121

    (48) function -> IF ( condition ) { script } .
    MINUS           reduce using rule 48 (function -> IF ( condition ) { script } .)
    PLUS            reduce using rule 48 (function -> IF ( condition ) { script } .)
    XMINUS          reduce using rule 48 (function -> IF ( condition ) { script } .)
    XPLUS           reduce using rule 48 (function -> IF ( condition ) { script } .)
    (               reduce using rule 48 (function -> IF ( condition ) { script } .)
    [               reduce using rule 48 (function -> IF ( condition ) { script } .)
    BOOL            reduce using rule 48 (function -> IF ( condition ) { script } .)
    STRING          reduce using rule 48 (function -> IF ( condition ) { script } .)
    NUMBER          reduce using rule 48 (function -> IF ( condition ) { script } .)
    NAME            reduce using rule 48 (function -> IF ( condition ) { script } .)
    WHILE           reduce using rule 48 (function -> IF ( condition ) { script } .)
    IF              reduce using rule 48 (function -> IF ( condition ) { script } .)
    ELSE            reduce using rule 48 (function -> IF ( condition ) { script } .)
    DISTRIBUTION    reduce using rule 48 (function -> IF ( condition ) { script } .)
    EVENT           reduce using rule 48 (function -> IF ( condition ) { script } .)
    SHOW            reduce using rule 48 (function -> IF ( condition ) { script } .)
    TRAIT           reduce using rule 48 (function -> IF ( condition ) { script } .)
    NEUTRAL         reduce using rule 48 (function -> IF ( condition ) { script } .)
    SEA             reduce using rule 48 (function -> IF ( condition ) { script } .)
    PROVINCE        reduce using rule 48 (function -> IF ( condition ) { script } .)
    NATION          reduce using rule 48 (function -> IF ( condition ) { script } .)
    NOT             reduce using rule 48 (function -> IF ( condition ) { script } .)
    $end            reduce using rule 48 (function -> IF ( condition ) { script } .)
    }               reduce using rule 48 (function -> IF ( condition ) { script } .)


Conflicts:

shift/reduce conflict for MINUS in state 3 resolved as shift
shift/reduce conflict for PLUS in state 3 resolved as shift
shift/reduce conflict for ARROW in state 48 resolved as shift
shift/reduce conflict for DIVIDE in state 48 resolved as shift
shift/reduce conflict for MULTIPLY in state 48 resolved as shift
shift/reduce conflict for MINUS in state 48 resolved as shift
shift/reduce conflict for PLUS in state 48 resolved as shift
shift/reduce conflict for ELESS in state 48 resolved as shift
shift/reduce conflict for EGREATER in state 48 resolved as shift
shift/reduce conflict for LESS in state 48 resolved as shift
shift/reduce conflict for GREATER in state 48 resolved as shift
shift/reduce conflict for NOTEQUALS in state 48 resolved as shift
shift/reduce conflict for EQUALS in state 48 resolved as shift
shift/reduce conflict for XOR in state 48 resolved as shift
shift/reduce conflict for OR in state 48 resolved as shift
shift/reduce conflict for AND in state 48 resolved as shift
shift/reduce conflict for ARROW in state 49 resolved as shift
shift/reduce conflict for DIVIDE in state 49 resolved as shift
shift/reduce conflict for MULTIPLY in state 49 resolved as shift
shift/reduce conflict for MINUS in state 49 resolved as shift
shift/reduce conflict for PLUS in state 49 resolved as shift
shift/reduce conflict for ELESS in state 49 resolved as shift
shift/reduce conflict for EGREATER in state 49 resolved as shift
shift/reduce conflict for LESS in state 49 resolved as shift
shift/reduce conflict for GREATER in state 49 resolved as shift
shift/reduce conflict for NOTEQUALS in state 49 resolved as shift
shift/reduce conflict for EQUALS in state 49 resolved as shift
shift/reduce conflict for XOR in state 49 resolved as shift
shift/reduce conflict for OR in state 49 resolved as shift
shift/reduce conflict for AND in state 49 resolved as shift
shift/reduce conflict for ( in state 60 resolved as shift
shift/reduce conflict for NAME in state 60 resolved as shift
shift/reduce conflict for ( in state 61 resolved as shift
shift/reduce conflict for NAME in state 61 resolved as shift
shift/reduce conflict for ( in state 62 resolved as shift
shift/reduce conflict for NAME in state 62 resolved as shift
shift/reduce conflict for ( in state 63 resolved as shift
shift/reduce conflict for NAME in state 63 resolved as shift
shift/reduce conflict for ( in state 64 resolved as shift
shift/reduce conflict for NAME in state 64 resolved as shift
shift/reduce conflict for ARROW in state 65 resolved as shift
shift/reduce conflict for DIVIDE in state 65 resolved as shift
shift/reduce conflict for MULTIPLY in state 65 resolved as shift
shift/reduce conflict for MINUS in state 65 resolved as shift
shift/reduce conflict for PLUS in state 65 resolved as shift
shift/reduce conflict for ELESS in state 65 resolved as shift
shift/reduce conflict for EGREATER in state 65 resolved as shift
shift/reduce conflict for LESS in state 65 resolved as shift
shift/reduce conflict for GREATER in state 65 resolved as shift
shift/reduce conflict for NOTEQUALS in state 65 resolved as shift
shift/reduce conflict for EQUALS in state 65 resolved as shift
shift/reduce conflict for XOR in state 65 resolved as shift
shift/reduce conflict for OR in state 65 resolved as shift
shift/reduce conflict for AND in state 65 resolved as shift
shift/reduce conflict for ARROW in state 66 resolved as shift
shift/reduce conflict for DIVIDE in state 66 resolved as shift
shift/reduce conflict for MULTIPLY in state 66 resolved as shift
shift/reduce conflict for MINUS in state 66 resolved as shift
shift/reduce conflict for PLUS in state 66 resolved as shift
shift/reduce conflict for ELESS in state 66 resolved as shift
shift/reduce conflict for EGREATER in state 66 resolved as shift
shift/reduce conflict for LESS in state 66 resolved as shift
shift/reduce conflict for GREATER in state 66 resolved as shift
shift/reduce conflict for NOTEQUALS in state 66 resolved as shift
shift/reduce conflict for EQUALS in state 66 resolved as shift
shift/reduce conflict for XOR in state 66 resolved as shift
shift/reduce conflict for OR in state 66 resolved as shift
shift/reduce conflict for AND in state 66 resolved as shift
shift/reduce conflict for MINUS in state 83 resolved as shift
shift/reduce conflict for PLUS in state 83 resolved as shift
shift/reduce conflict for ( in state 105 resolved as shift
shift/reduce conflict for NAME in state 105 resolved as shift
shift/reduce conflict for MINUS in state 111 resolved as shift
shift/reduce conflict for PLUS in state 111 resolved as shift